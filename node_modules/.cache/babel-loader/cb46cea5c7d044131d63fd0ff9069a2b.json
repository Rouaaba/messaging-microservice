{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import axiosInstance from'../axiosConfig';import{FaUserCircle,FaCog,FaArrowLeft}from'react-icons/fa';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Invitations=()=>{const[role,setRole]=useState('');const[userData,setUserData]=useState(null);const[friends,setFriends]=useState([]);const[sentInvitations,setSentInvitations]=useState([]);const[receivedInvitations,setReceivedInvitations]=useState([]);const[peopleYouMayKnow,setPeopleYouMayKnow]=useState([]);const[settingsVisible,setSettingsVisible]=useState(false);const navigate=useNavigate();useEffect(()=>{const fetchUserData=async()=>{var _JSON$parse;const token=localStorage.getItem('token');const userId=(_JSON$parse=JSON.parse(localStorage.getItem('user')))===null||_JSON$parse===void 0?void 0:_JSON$parse.id;if(token&&userId){try{const response=await axiosInstance.get(`/api/user/id/${userId}`,{headers:{Authorization:`Bearer ${token}`}});setUserData(response.data);await fetchFriends(userId,token);// Fetch friends here\nawait fetchPeopleYouMayKnow(userId,token);// Fetch suggestions here\nawait fetchReceivedInvitations(userId,token);await fetchSentInvitations(userId,token);}catch(error){console.error('Failed to fetch user data:',error.response?error.response.data:error.message);navigate('/login');}}else{navigate('/login');}};fetchUserData();},[navigate]);const fetchFriends=async(userId,token)=>{try{const response=await axiosInstance.get(`/api/user/friends/${userId}`,{headers:{Authorization:`Bearer ${token}`}});console.log('Fetched friends:',response.data);// Log the response\nsetFriends(response.data);}catch(error){console.error('Failed to fetch friends:',error.response?error.response.data:error.message);}};const fetchPeopleYouMayKnow=async(userId,token)=>{try{const response=await axiosInstance.get(`/user-service/api/friend-request/not-friends/${userId}`,{headers:{Authorization:`Bearer ${token}`}});setPeopleYouMayKnow(response.data);}catch(error){console.error('Failed to fetch people you may know:',error.response?error.response.data:error.message);}};const fetchReceivedInvitations=async(userId,token)=>{try{const response=await axiosInstance.get(`/user-service/api/friend-request/received/${userId}`,{headers:{Authorization:`Bearer ${token}`}});setReceivedInvitations(response.data);}catch(error){console.error('Failed to fetch received invitations:',error.response?error.response.data:error.message);}};const fetchSentInvitations=async(userId,token)=>{try{const response=await axiosInstance.get(`/user-service/api/friend-request/sent/${userId}`,{headers:{Authorization:`Bearer ${token}`}});setSentInvitations(response.data);// Set sent invitations\n}catch(error){console.error('Failed to fetch sent invitations:',error.response?error.response.data:error.message);}};const acceptRequest=async(senderId,token)=>{const receiverId=userData.id;// Current logged-in user's ID\ntry{await axiosInstance.delete(`/user-service/api/friend-request/accept/${senderId}/${receiverId}`,{headers:{Authorization:`Bearer ${token}`}});alert('Friend request accepted!');fetchReceivedInvitations(receiverId,token);}catch(error){console.error('Error accepting friend request:',error);}};const rejectRequest=async(senderId,token)=>{const receiverId=userData.id;// Current logged-in user's ID\ntry{await axiosInstance.delete(`/user-service/api/friend-request/reject/${senderId}/${receiverId}`,{headers:{Authorization:`Bearer ${token}`}});alert('Friend request rejected!');fetchReceivedInvitations(receiverId,token);}catch(error){console.error('Error rejecting friend request:',error);}};const goToProfile=()=>{navigate(`/profile`);// Adjust the route as necessary\n};const toggleSettings=()=>{setSettingsVisible(prev=>!prev);};const handleUpdateProfile=()=>{navigate('/update-profile');};const handleLogout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');navigate('/login');// Redirect to login page\n};const handleGoBack=()=>{navigate('/dashboard');// Redirect to Dashboard page\n};return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{width:'250px',borderRight:'1px solid #ccc',padding:'20px'},children:[/*#__PURE__*/_jsx(FaUserCircle,{size:50,onClick:goToProfile,style:{cursor:'pointer',marginBottom:'10px'}}),/*#__PURE__*/_jsx(\"h3\",{children:userData?`${userData.username}`:'Guest'}),/*#__PURE__*/_jsx(\"h4\",{children:\"Friends List\"}),/*#__PURE__*/_jsx(\"ul\",{style:{listStyleType:'none',padding:0},children:friends.length>0?friends.map(friend=>/*#__PURE__*/_jsxs(\"li\",{children:[friend.firstname,\" \",friend.lastname]},friend.id)):/*#__PURE__*/_jsx(\"li\",{children:\"No friends found.\"})}),/*#__PURE__*/_jsx(FaCog,{size:20,onClick:toggleSettings,style:{cursor:'pointer',marginTop:'10px'}}),settingsVisible&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'10px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleUpdateProfile,children:\"Update Profile\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"Logout\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{flexGrow:1,padding:'20px',textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"button\",{onClick:handleGoBack,children:[/*#__PURE__*/_jsx(FaArrowLeft,{}),\" Go Back\"]}),/*#__PURE__*/_jsx(\"h1\",{children:\"Invitations\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',marginTop:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{width:'45%'},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Received Invitations\"}),/*#__PURE__*/_jsx(\"ul\",{style:{listStyleType:'none',padding:0},children:receivedInvitations.length>0?receivedInvitations.map(invitation=>/*#__PURE__*/_jsxs(\"li\",{children:[invitation.senderUsername,/*#__PURE__*/_jsx(\"button\",{onClick:()=>acceptRequest(invitation.senderId),children:\"Accept\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>rejectRequest(invitation.senderId),children:\"Reject\"})]},invitation.senderId)):/*#__PURE__*/_jsx(\"li\",{children:\"No received invitations.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{width:'45%'},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Sent Invitations\"}),/*#__PURE__*/_jsx(\"ul\",{style:{listStyleType:'none',padding:0},children:sentInvitations.length>0?sentInvitations.map(invitation=>/*#__PURE__*/_jsx(\"li\",{children:invitation.receiverUsername},invitation.receiverId)):/*#__PURE__*/_jsx(\"li\",{children:\"No sent invitations.\"})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{width:'250px',borderLeft:'1px solid #ccc',padding:'20px'},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"People You May Know\"}),/*#__PURE__*/_jsx(\"ul\",{style:{listStyleType:'none',padding:0},children:peopleYouMayKnow.length>0?peopleYouMayKnow.map(user=>/*#__PURE__*/_jsx(\"li\",{children:user.username},user.id)):/*#__PURE__*/_jsx(\"li\",{children:\"No suggestions.\"})})]})]});};export default Invitations;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axiosInstance","FaUserCircle","FaCog","FaArrowLeft","jsx","_jsx","jsxs","_jsxs","Invitations","role","setRole","userData","setUserData","friends","setFriends","sentInvitations","setSentInvitations","receivedInvitations","setReceivedInvitations","peopleYouMayKnow","setPeopleYouMayKnow","settingsVisible","setSettingsVisible","navigate","fetchUserData","_JSON$parse","token","localStorage","getItem","userId","JSON","parse","id","response","get","headers","Authorization","data","fetchFriends","fetchPeopleYouMayKnow","fetchReceivedInvitations","fetchSentInvitations","error","console","message","log","acceptRequest","senderId","receiverId","delete","alert","rejectRequest","goToProfile","toggleSettings","prev","handleUpdateProfile","handleLogout","removeItem","handleGoBack","style","display","children","width","borderRight","padding","size","onClick","cursor","marginBottom","username","listStyleType","length","map","friend","firstname","lastname","marginTop","flexGrow","textAlign","justifyContent","invitation","senderUsername","receiverUsername","borderLeft","user"],"sources":["/home/rouaa/Desktop/social-media-front/src/components/Invitation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../axiosConfig';\nimport { FaUserCircle, FaCog, FaArrowLeft } from 'react-icons/fa';\n\nconst Invitations = () => {\n    const [role, setRole] = useState('');\n    const [userData, setUserData] = useState(null);\n    const [friends, setFriends] = useState([]);\n    const [sentInvitations, setSentInvitations] = useState([]);\n    const [receivedInvitations, setReceivedInvitations] = useState([]);\n    const [peopleYouMayKnow, setPeopleYouMayKnow] = useState([]);\n    const [settingsVisible, setSettingsVisible] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchUserData = async () => {\n            const token = localStorage.getItem('token');\n            const userId = JSON.parse(localStorage.getItem('user'))?.id;\n        \n            if (token && userId) {\n                try {\n                    const response = await axiosInstance.get(`/api/user/id/${userId}`, {\n                        headers: {\n                            Authorization: `Bearer ${token}`,\n                        },\n                    });\n                    setUserData(response.data);\n                    await fetchFriends(userId, token); // Fetch friends here\n                    await fetchPeopleYouMayKnow(userId, token); // Fetch suggestions here\n                    await fetchReceivedInvitations(userId, token);\n                    await fetchSentInvitations(userId, token);\n                } catch (error) {\n                    console.error('Failed to fetch user data:', error.response ? error.response.data : error.message);\n                    navigate('/login');\n                }\n            } else {\n                navigate('/login');\n            }\n        };\n        \n\n        fetchUserData();\n    }, [navigate]);\n\n    const fetchFriends = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/api/user/friends/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            console.log('Fetched friends:', response.data); // Log the response\n            setFriends(response.data);\n        } catch (error) {\n            console.error('Failed to fetch friends:', error.response ? error.response.data : error.message);\n        }\n    };\n    \n\n    const fetchPeopleYouMayKnow = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/user-service/api/friend-request/not-friends/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setPeopleYouMayKnow(response.data);\n        } catch (error) {\n            console.error('Failed to fetch people you may know:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const fetchReceivedInvitations = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/user-service/api/friend-request/received/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setReceivedInvitations(response.data);\n        } catch (error) {\n            console.error('Failed to fetch received invitations:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const fetchSentInvitations = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/user-service/api/friend-request/sent/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setSentInvitations(response.data); // Set sent invitations\n        } catch (error) {\n            console.error('Failed to fetch sent invitations:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const acceptRequest = async (senderId, token) => {\n        const receiverId = userData.id; // Current logged-in user's ID\n        try {\n            await axiosInstance.delete(`/user-service/api/friend-request/accept/${senderId}/${receiverId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            alert('Friend request accepted!');\n            fetchReceivedInvitations(receiverId, token);\n        } catch (error) {\n            console.error('Error accepting friend request:', error);\n        }\n    };\n\n    const rejectRequest = async (senderId, token) => {\n        const receiverId = userData.id; // Current logged-in user's ID\n        try {\n            await axiosInstance.delete(`/user-service/api/friend-request/reject/${senderId}/${receiverId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            alert('Friend request rejected!');\n            fetchReceivedInvitations(receiverId, token);\n        } catch (error) {\n            console.error('Error rejecting friend request:', error);\n        }\n    };\n\n    const goToProfile = () => {\n        navigate(`/profile`); // Adjust the route as necessary\n    };\n\n    const toggleSettings = () => {\n        setSettingsVisible((prev) => !prev);\n    };\n\n    const handleUpdateProfile = () => {\n        navigate('/update-profile');\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        navigate('/login'); // Redirect to login page\n    };\n\n    const handleGoBack = () => {\n        navigate('/dashboard'); // Redirect to Dashboard page\n    };\n\n    return (\n        <div style={{ display: 'flex' }}>\n            <div style={{ width: '250px', borderRight: '1px solid #ccc', padding: '20px' }}>\n                <FaUserCircle size={50} onClick={goToProfile} style={{ cursor: 'pointer', marginBottom: '10px' }} />\n                <h3>{userData ? `${userData.username}` : 'Guest'}</h3>\n\n                {/* Friends List */}\n                <h4>Friends List</h4>\n                <ul style={{ listStyleType: 'none', padding: 0 }}>\n                    {friends.length > 0 ? (\n                        friends.map((friend) => (\n                            <li key={friend.id}>{friend.firstname} {friend.lastname}</li>\n                        ))\n                    ) : (\n                        <li>No friends found.</li>\n                    )}\n                </ul>\n                \n                \n                {/* Settings Icon and Menu */}\n                <FaCog size={20} onClick={toggleSettings} style={{ cursor: 'pointer', marginTop: '10px' }} />\n                {settingsVisible && (\n                    <div style={{ marginTop: '10px' }}>\n                        <button onClick={handleUpdateProfile}>Update Profile</button>\n                        <button onClick={handleLogout}>Logout</button>\n                    </div>\n                )}\n            </div>\n\n            <div style={{ flexGrow: 1, padding: '20px', textAlign: 'center' }}>\n                <button onClick={handleGoBack}>\n                    <FaArrowLeft /> Go Back\n                </button>\n                <h1>Invitations</h1>\n\n                {/* Center section: Received Invitations and Sent Invitations */}\n                <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '20px' }}>\n                    <div style={{ width: '45%' }}>\n                        <h4>Received Invitations</h4>\n                        <ul style={{ listStyleType: 'none', padding: 0 }}>\n                            {receivedInvitations.length > 0 ? (\n                                receivedInvitations.map((invitation) => (\n                                    <li key={invitation.senderId}>\n                                        {invitation.senderUsername}\n                                        <button onClick={() => acceptRequest(invitation.senderId)}>Accept</button>\n                                        <button onClick={() => rejectRequest(invitation.senderId)}>Reject</button>\n                                    </li>\n                                ))\n                            ) : (\n                                <li>No received invitations.</li>\n                            )}\n                        </ul>\n                    </div>\n\n                    <div style={{ width: '45%' }}>\n                        <h4>Sent Invitations</h4>\n                        <ul style={{ listStyleType: 'none', padding: 0 }}>\n                            {sentInvitations.length > 0 ? (\n                                sentInvitations.map((invitation) => (\n                                    <li key={invitation.receiverId}>\n                                        {invitation.receiverUsername}\n                                        {/* You can add buttons to cancel or manage sent invitations here if needed */}\n                                    </li>\n                                ))\n                            ) : (\n                                <li>No sent invitations.</li>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n\n            <div style={{ width: '250px', borderLeft: '1px solid #ccc', padding: '20px' }}>\n                <h4>People You May Know</h4>\n                <ul style={{ listStyleType: 'none', padding: 0 }}>\n                    {peopleYouMayKnow.length > 0 ? (\n                        peopleYouMayKnow.map((user) => (\n                            <li key={user.id}>{user.username}</li>\n                        ))\n                    ) : (\n                        <li>No suggestions.</li>\n                    )}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default Invitations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}