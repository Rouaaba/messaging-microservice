{"ast":null,"code":"var _jsxFileName = \"/home/rouaa/Desktop/social-media-front/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axiosInstance from '../axiosConfig';\nimport jwtDecode from 'jwt-decode'; // Make sure to install jwt-decode if you haven't already\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [role, setRole] = useState('');\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const token = localStorage.getItem('token'); // Get the token from local storage\n\n      if (token) {\n        // Decode the token to get user information\n        const decodedToken = jwtDecode(token);\n        const userId = decodedToken.id; // Extract the user ID from the token\n\n        try {\n          const response = await axiosInstance.get(`/user/id/${userId}`); // Use the user ID from the token\n          setUserData(response.data);\n          setRole(response.data.roles[0]); // Get the first role (assuming only one)\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n        }\n      } else {\n        console.error('No token found, user not authenticated.');\n      }\n    };\n    fetchUserData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), role === 'ROLE_ADMIN' ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), userData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", userData.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", userData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Full Name: \", userData.firstName, \" \", userData.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Q70J9n9Z1ysBRcfBPVcjoJhmbqs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axiosInstance","jwtDecode","jsxDEV","_jsxDEV","Dashboard","_s","userData","setUserData","role","setRole","fetchUserData","token","localStorage","getItem","decodedToken","userId","id","response","get","data","roles","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","username","email","firstName","lastName","_c","$RefreshReg$"],"sources":["/home/rouaa/Desktop/social-media-front/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axiosInstance from '../axiosConfig';\nimport jwtDecode from 'jwt-decode'; // Make sure to install jwt-decode if you haven't already\n\nconst Dashboard = () => {\n  const [userData, setUserData] = useState(null);\n  const [role, setRole] = useState('');\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const token = localStorage.getItem('token'); // Get the token from local storage\n\n      if (token) {\n        // Decode the token to get user information\n        const decodedToken = jwtDecode(token);\n        const userId = decodedToken.id; // Extract the user ID from the token\n\n        try {\n          const response = await axiosInstance.get(`/user/id/${userId}`); // Use the user ID from the token\n          setUserData(response.data);\n          setRole(response.data.roles[0]); // Get the first role (assuming only one)\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n        }\n      } else {\n        console.error('No token found, user not authenticated.');\n      }\n    };\n    \n    fetchUserData();\n  }, []);\n\n  return (\n    <div>\n      <h2>User Dashboard</h2>\n      {role === 'ROLE_ADMIN' ? (\n        <h2>Admin Dashboard</h2>\n      ) : (\n        <h2>User Dashboard</h2>\n      )}\n      {userData && (\n        <div>\n          <p>Username: {userData.username}</p>\n          <p>Email: {userData.email}</p>\n          <p>Full Name: {userData.firstName} {userData.lastName}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,SAAS,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;MAE7C,IAAIF,KAAK,EAAE;QACT;QACA,MAAMG,YAAY,GAAGb,SAAS,CAACU,KAAK,CAAC;QACrC,MAAMI,MAAM,GAAGD,YAAY,CAACE,EAAE,CAAC,CAAC;;QAEhC,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMjB,aAAa,CAACkB,GAAG,CAAC,YAAYH,MAAM,EAAE,CAAC,CAAC,CAAC;UAChER,WAAW,CAACU,QAAQ,CAACE,IAAI,CAAC;UAC1BV,OAAO,CAACQ,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACnD;MACF,CAAC,MAAM;QACLC,OAAO,CAACD,KAAK,CAAC,yCAAyC,CAAC;MAC1D;IACF,CAAC;IAEDX,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBnB,IAAI,KAAK,YAAY,gBACpBL,OAAA;MAAAoB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAExBxB,OAAA;MAAAoB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACvB,EACArB,QAAQ,iBACPH,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,GAAG,YAAU,EAACjB,QAAQ,CAACsB,QAAQ;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpCxB,OAAA;QAAAoB,QAAA,GAAG,SAAO,EAACjB,QAAQ,CAACuB,KAAK;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BxB,OAAA;QAAAoB,QAAA,GAAG,aAAW,EAACjB,QAAQ,CAACwB,SAAS,EAAC,GAAC,EAACxB,QAAQ,CAACyB,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CA7CID,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}