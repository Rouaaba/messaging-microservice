{"ast":null,"code":"var _jsxFileName = \"/home/rouaa/Desktop/social-media-front/src/components/UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from './axiosInstance'; // Adjust the import based on your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [role, setRole] = useState('Guest'); // Initialize role\n  const [loading, setLoading] = useState(true); // Initialize loading state\n  const navigate = useNavigate(); // Initialize navigate function\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      var _JSON$parse;\n      const token = localStorage.getItem('token');\n      const userId = (_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.id;\n      if (token && userId) {\n        try {\n          const response = await axiosInstance.get(`/user/id/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          const fetchedUserData = response.data;\n          setUserData(fetchedUserData); // Set the fetched user data in the state\n\n          // Safely set the role if roles exist\n          const userRole = fetchedUserData.roles && fetchedUserData.roles.length > 0 ? fetchedUserData.roles[0] : 'Guest';\n          setRole(userRole);\n\n          // Fetch friends list using token (Assuming fetchFriends is defined)\n          await fetchFriends(fetchedUserData.id, token);\n\n          // Update user data in localStorage\n          localStorage.setItem('user', JSON.stringify(fetchedUserData));\n        } catch (error) {\n          console.error('Failed to fetch user data:', error.response ? error.response.data : error.message);\n          navigate('/login'); // Redirect to login if not authenticated or error\n        } finally {\n          setLoading(false); // Set loading to false after fetching\n        }\n      } else {\n        console.error('No user data found, redirecting to login.');\n        navigate('/login'); // Redirect if no user data found\n      }\n    };\n    fetchUserData();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading user data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : userData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", userData.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", userData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Full Name: \", userData.firstName, \" \", userData.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone Number: \", userData.phoneNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bio: \", userData.bio]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Friends: \", userData.friends.map(friend => friend.username).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Role: \", role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No user data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"KzVZTEarWE+1s7Rh5Od2xZiPv7k=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axiosInstance","jsxDEV","_jsxDEV","UserProfile","_s","userData","setUserData","role","setRole","loading","setLoading","navigate","fetchUserData","_JSON$parse","token","localStorage","getItem","userId","JSON","parse","id","response","get","headers","Authorization","fetchedUserData","data","userRole","roles","length","fetchFriends","setItem","stringify","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","username","email","firstName","lastName","phoneNumber","bio","friends","map","friend","join","_c","$RefreshReg$"],"sources":["/home/rouaa/Desktop/social-media-front/src/components/UserProfile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from './axiosInstance'; // Adjust the import based on your project structure\n\nconst UserProfile = () => {\n  const [userData, setUserData] = useState(null);\n  const [role, setRole] = useState('Guest'); // Initialize role\n  const [loading, setLoading] = useState(true); // Initialize loading state\n  const navigate = useNavigate(); // Initialize navigate function\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const token = localStorage.getItem('token');\n      const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n      if (token && userId) {\n        try {\n          const response = await axiosInstance.get(`/user/id/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          });\n          const fetchedUserData = response.data;\n          setUserData(fetchedUserData); // Set the fetched user data in the state\n\n          // Safely set the role if roles exist\n          const userRole = fetchedUserData.roles && fetchedUserData.roles.length > 0 \n            ? fetchedUserData.roles[0] \n            : 'Guest';\n          setRole(userRole);\n\n          // Fetch friends list using token (Assuming fetchFriends is defined)\n          await fetchFriends(fetchedUserData.id, token);\n          \n          // Update user data in localStorage\n          localStorage.setItem('user', JSON.stringify(fetchedUserData)); \n        } catch (error) {\n          console.error('Failed to fetch user data:', error.response ? error.response.data : error.message);\n          navigate('/login'); // Redirect to login if not authenticated or error\n        } finally {\n          setLoading(false); // Set loading to false after fetching\n        }\n      } else {\n        console.error('No user data found, redirecting to login.');\n        navigate('/login'); // Redirect if no user data found\n      }\n    };\n\n    fetchUserData();\n  }, [navigate]);\n\n  return (\n    <div>\n      <h2>User Profile</h2>\n      {loading ? (\n        <p>Loading user data...</p>\n      ) : userData ? (\n        <div>\n          <p>Username: {userData.username}</p>\n          <p>Email: {userData.email}</p>\n          <p>Full Name: {userData.firstName} {userData.lastName}</p>\n          <p>Phone Number: {userData.phoneNumber}</p>\n          <p>Bio: {userData.bio}</p>\n          <p>Friends: {userData.friends.map(friend => friend.username).join(', ')}</p>\n          <p>Role: {role}</p> {/* Display the user's role */}\n        </div>\n      ) : (\n        <p>No user data available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default UserProfile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}