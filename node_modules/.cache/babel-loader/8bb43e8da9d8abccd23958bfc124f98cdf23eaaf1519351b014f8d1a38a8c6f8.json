{"ast":null,"code":"var _jsxFileName = \"/home/rouaa/Desktop/social-media-front/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, List, ListItem, ListItemText, TextField, IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport axiosInstance from '../axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  friend,\n  onClose\n}) => {\n  _s();\n  var _JSON$parse;\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const token = localStorage.getItem('token');\n  const userId = (_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.id;\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axiosInstance.get(`/api/conversations/${userId}/${friend.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMessages(response.data);\n      } catch (error) {\n        console.error('Failed to fetch messages:', error.response ? error.response.data : error.message);\n      }\n    };\n    fetchMessages();\n  }, [friend.id, token, userId]);\n  const handleSendMessage = async () => {\n    if (newMessage) {\n      try {\n        await axiosInstance.post(`/api/messages/${userId}/${friend.id}`, {\n          content: newMessage\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setNewMessage('');\n        setMessages([...messages, {\n          content: newMessage,\n          senderId: userId\n        }]); // Update the local state\n      } catch (error) {\n        console.error('Failed to send message:', error.response ? error.response.data : error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'fixed',\n      bottom: 0,\n      right: 20,\n      width: '300px',\n      backgroundColor: '#ffffff',\n      boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.2)',\n      borderRadius: '10px 10px 0 0',\n      overflow: 'hidden',\n      zIndex: 1000\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#3f51b5',\n        color: '#fff',\n        padding: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: `${friend.firstname} ${friend.lastname}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: onClose,\n        size: \"small\",\n        sx: {\n          color: '#fff'\n        },\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: '250px',\n        overflowY: 'auto',\n        padding: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            justifyContent: message.senderId === userId ? 'flex-end' : 'flex-start'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: message.content,\n            sx: {\n              backgroundColor: message.senderId === userId ? '#cfe9ff' : '#f1f1f1',\n              borderRadius: '10px',\n              padding: '5px 10px',\n              maxWidth: '80%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        padding: '10px',\n        borderTop: '1px solid #ccc'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        size: \"small\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSendMessage,\n        variant: \"contained\",\n        sx: {\n          marginLeft: '10px'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatWindow, \"ppYy//Iy9fHF0/R/fKleZlFUFyc=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","List","ListItem","ListItemText","TextField","IconButton","CloseIcon","axiosInstance","jsxDEV","_jsxDEV","ChatWindow","friend","onClose","_s","_JSON$parse","messages","setMessages","newMessage","setNewMessage","token","localStorage","getItem","userId","JSON","parse","id","fetchMessages","response","get","headers","Authorization","data","error","console","message","handleSendMessage","post","content","senderId","sx","position","bottom","right","width","backgroundColor","boxShadow","borderRadius","overflow","zIndex","children","display","justifyContent","alignItems","color","padding","firstname","lastname","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","height","overflowY","map","index","primary","maxWidth","borderTop","fullWidth","variant","value","onChange","e","target","placeholder","marginLeft","_c","$RefreshReg$"],"sources":["/home/rouaa/Desktop/social-media-front/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Box,\n    Button,\n    List,\n    ListItem,\n    ListItemText,\n    TextField,\n    IconButton,\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport axiosInstance from '../axiosConfig';\n\nconst ChatWindow = ({ friend, onClose }) => {\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    const token = localStorage.getItem('token');\n    const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n    useEffect(() => {\n        const fetchMessages = async () => {\n            try {\n                const response = await axiosInstance.get(`/api/conversations/${userId}/${friend.id}`, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                setMessages(response.data);\n            } catch (error) {\n                console.error('Failed to fetch messages:', error.response ? error.response.data : error.message);\n            }\n        };\n\n        fetchMessages();\n    }, [friend.id, token, userId]);\n\n    const handleSendMessage = async () => {\n        if (newMessage) {\n            try {\n                await axiosInstance.post(`/api/messages/${userId}/${friend.id}`, { content: newMessage }, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                setNewMessage('');\n                setMessages([...messages, { content: newMessage, senderId: userId }]); // Update the local state\n            } catch (error) {\n                console.error('Failed to send message:', error.response ? error.response.data : error.message);\n            }\n        }\n    };\n\n    return (\n        <Box\n            sx={{\n                position: 'fixed',\n                bottom: 0,\n                right: 20,\n                width: '300px',\n                backgroundColor: '#ffffff',\n                boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.2)',\n                borderRadius: '10px 10px 0 0',\n                overflow: 'hidden',\n                zIndex: 1000,\n            }}\n        >\n            <Box\n                sx={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    backgroundColor: '#3f51b5',\n                    color: '#fff',\n                    padding: '10px',\n                }}\n            >\n                <span>{`${friend.firstname} ${friend.lastname}`}</span>\n                <IconButton onClick={onClose} size=\"small\" sx={{ color: '#fff' }}>\n                    <CloseIcon />\n                </IconButton>\n            </Box>\n            <Box sx={{ height: '250px', overflowY: 'auto', padding: '10px' }}>\n                <List>\n                    {messages.map((message, index) => (\n                        <ListItem key={index} sx={{ justifyContent: message.senderId === userId ? 'flex-end' : 'flex-start' }}>\n                            <ListItemText\n                                primary={message.content}\n                                sx={{\n                                    backgroundColor: message.senderId === userId ? '#cfe9ff' : '#f1f1f1',\n                                    borderRadius: '10px',\n                                    padding: '5px 10px',\n                                    maxWidth: '80%',\n                                }}\n                            />\n                        </ListItem>\n                    ))}\n                </List>\n            </Box>\n            <Box sx={{ display: 'flex', padding: '10px', borderTop: '1px solid #ccc' }}>\n                <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    placeholder=\"Type a message...\"\n                />\n                <Button onClick={handleSendMessage} variant=\"contained\" sx={{ marginLeft: '10px' }}>\n                    Send\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nexport default ChatWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}