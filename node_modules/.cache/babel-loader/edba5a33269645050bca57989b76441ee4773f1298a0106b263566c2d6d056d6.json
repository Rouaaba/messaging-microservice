{"ast":null,"code":"var _jsxFileName = \"/home/rouaa/Desktop/social-media-front/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../axiosConfig';\nimport { FaUserCircle, FaCog } from 'react-icons/fa';\nimport { Box, Button, Divider, Typography, IconButton, List, ListItem, ListItemText, CircularProgress, TextField } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledContainer = styled(Box)({\n  display: 'flex',\n  flexDirection: 'row',\n  padding: '0',\n  margin: '0',\n  width: '100vw',\n  height: '100vh',\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  overflow: 'hidden',\n  backgroundColor: '#DDE6ED'\n});\n_c = StyledContainer;\nconst Sidebar = styled(Box)(({\n  theme\n}) => ({\n  width: '20%',\n  maxWidth: '350px',\n  height: '100vh',\n  borderRight: '1px solid #ccc',\n  padding: '20px',\n  backgroundColor: '#c3d0d9',\n  flexShrink: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  boxShadow: '2px 0 5px rgba(0, 0, 0, 0.1)',\n  [theme.breakpoints.down('sm')]: {\n    width: '30%'\n  },\n  [theme.breakpoints.down('xs')]: {\n    display: 'none'\n  }\n}));\n_c2 = Sidebar;\nconst MainContent = styled(Box)({\n  flexGrow: 1,\n  height: '100vh',\n  padding: '20px',\n  textAlign: 'center',\n  backgroundColor: '#ffffff',\n  boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\n  overflowY: 'auto',\n  borderRadius: '10px',\n  margin: '20px'\n});\n_c3 = MainContent;\nconst Suggestions = styled(Box)(({\n  theme\n}) => ({\n  width: '30%',\n  // Increased width to 30%\n  maxWidth: '350px',\n  // Optional: Set a maximum width\n  height: '100vh',\n  borderLeft: '1px solid #ccc',\n  padding: '20px',\n  backgroundColor: '#c3d0d9',\n  flexShrink: 0,\n  boxShadow: '-2px 0 5px rgba(0, 0, 0, 0.1)',\n  display: 'flex',\n  // Ensure the panel displays correctly\n  flexDirection: 'column',\n  // Maintain column layout\n  [theme.breakpoints.down('sm')]: {\n    width: '40%' // Adjust width on smaller screens if necessary\n  },\n  [theme.breakpoints.down('xs')]: {\n    display: 'none'\n  }\n}));\n_c4 = Suggestions;\nconst ContentBox = styled(Box)({\n  backgroundColor: '#ffffff',\n  padding: '15px',\n  borderRadius: '10px',\n  boxShadow: '0px 2px 5px rgba(0, 0, 0, 0.1)',\n  marginBottom: '10px'\n});\n_c5 = ContentBox;\nconst SidebarButton = styled(IconButton)({\n  marginBottom: '10px'\n});\n_c6 = SidebarButton;\nconst Dashboard = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [role, setRole] = useState('');\n  const [friends, setFriends] = useState([]);\n  const [peopleYouMayKnow, setPeopleYouMayKnow] = useState([]);\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // State for conversation and messages\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      var _JSON$parse;\n      const token = localStorage.getItem('token');\n      const userId = (_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.id;\n      if (token && userId) {\n        try {\n          var _response$data$roles;\n          const response = await axiosInstance.get(`/api/user/id/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setUserData(response.data);\n          setRole(((_response$data$roles = response.data.roles) === null || _response$data$roles === void 0 ? void 0 : _response$data$roles[0]) || 'Guest');\n          await fetchFriends(userId, token);\n          await fetchPeopleYouMayKnow(userId, token);\n        } catch (error) {\n          console.error('Failed to fetch user data:', error.response ? error.response.data : error.message);\n          navigate('/login');\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        navigate('/login');\n      }\n    };\n    fetchUserData();\n  }, [navigate]);\n  const fetchFriends = async (userId, token) => {\n    try {\n      const response = await axiosInstance.get(`/api/user/friends/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setFriends(response.data);\n    } catch (error) {\n      console.error('Failed to fetch friends:', error.response ? error.response.data : error.message);\n    }\n  };\n  const fetchPeopleYouMayKnow = async (userId, token) => {\n    try {\n      const response = await axiosInstance.get(`/user-service/api/friend-request/not-friends/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPeopleYouMayKnow(response.data);\n    } catch (error) {\n      console.error('Failed to fetch people you may know:', error.response ? error.response.data : error.message);\n    }\n  };\n  const fetchMessages = async friendId => {\n    var _JSON$parse2;\n    const token = localStorage.getItem('token');\n    const userId = (_JSON$parse2 = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse2 === void 0 ? void 0 : _JSON$parse2.id; // Get the sender's ID\n\n    try {\n      const response = await axiosInstance.get(`/api/messages/between/${userId}/${friendId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessages(response.data);\n      setCurrentConversationId(friendId);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error.response ? error.response.data : error.message);\n    }\n  };\n  const handleSendMessage = async () => {\n    var _JSON$parse3;\n    const token = localStorage.getItem('token');\n    const userId = (_JSON$parse3 = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse3 === void 0 ? void 0 : _JSON$parse3.id;\n    if (newMessage && token && currentConversationId) {\n      try {\n        await axiosInstance.post(`/api/messages/between/${userId}/${currentConversationId}`, {\n          senderId: userId,\n          content: newMessage\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMessages(prev => [...prev, {\n          senderId: userId,\n          content: newMessage\n        }]); // Update messages state\n        setNewMessage(''); // Clear input\n      } catch (error) {\n        console.error('Failed to send message:', error.response ? error.response.data : error.message);\n      }\n    }\n  };\n  const toggleSettings = () => {\n    setSettingsVisible(prev => !prev);\n  };\n  const handleUpdateProfile = () => {\n    navigate('/update-profile');\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n  const handleGoToInvitations = () => {\n    navigate('/invitations');\n  };\n  const handleSendFriendRequest = async friendId => {\n    var _JSON$parse4;\n    const token = localStorage.getItem('token');\n    const userId = (_JSON$parse4 = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse4 === void 0 ? void 0 : _JSON$parse4.id;\n    if (token && userId) {\n      try {\n        await axiosInstance.post(`/user-service/api/friend-request/${userId}/${friendId}`, {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('Friend request sent successfully!');\n      } catch (error) {\n        console.error('Failed to send friend request:', error.response ? error.response.data : error.message);\n        alert('Failed to send friend request. Please try again later.');\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SidebarButton, {\n          onClick: () => navigate('/profile'),\n          children: /*#__PURE__*/_jsxDEV(FaUserCircle, {\n            size: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: userData ? userData.username : 'Guest'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            margin: '10px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ContentBox, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: '#27374D'\n            },\n            children: \"Friends List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: friends.length > 0 ? friends.map(friend => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              onClick: () => fetchMessages(friend.id),\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${friend.firstname} ${friend.lastname}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 41\n              }, this)\n            }, friend.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"No friends found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SidebarButton, {\n          onClick: toggleSettings,\n          children: /*#__PURE__*/_jsxDEV(FaCog, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this), settingsVisible && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleUpdateProfile,\n            variant: \"outlined\",\n            sx: {\n              marginBottom: '5px'\n            },\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleLogout,\n            variant: \"outlined\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          color: '#27374D'\n        },\n        children: \"Welcome to your Dashboard!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          margin: '20px 0'\n        },\n        children: \"This area can be used for various widgets or information.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), currentConversationId && /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: [\"Conversation with \", currentConversationId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              justifyContent: msg.senderId === JSON.parse(localStorage.getItem('user')).id ? 'flex-end' : 'flex-start'\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true,\n          placeholder: \"Type a message...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          sx: {\n            marginBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Suggestions, {\n      children: /*#__PURE__*/_jsxDEV(ContentBox, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: '#27374D'\n          },\n          children: \"People You May Know\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: peopleYouMayKnow.length > 0 ? peopleYouMayKnow.map(user => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              size: \"small\",\n              onClick: () => handleSendFriendRequest(user.id),\n              children: \"Add Friend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 37\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"No suggestions available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"n9c3COtQnK/UpYggeXx9e3CG9K0=\", false, function () {\n  return [useNavigate];\n});\n_c7 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"MainContent\");\n$RefreshReg$(_c4, \"Suggestions\");\n$RefreshReg$(_c5, \"ContentBox\");\n$RefreshReg$(_c6, \"SidebarButton\");\n$RefreshReg$(_c7, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axiosInstance","FaUserCircle","FaCog","Box","Button","Divider","Typography","IconButton","List","ListItem","ListItemText","CircularProgress","TextField","styled","jsxDEV","_jsxDEV","StyledContainer","display","flexDirection","padding","margin","width","height","position","top","left","overflow","backgroundColor","_c","Sidebar","theme","maxWidth","borderRight","flexShrink","justifyContent","boxShadow","breakpoints","down","_c2","MainContent","flexGrow","textAlign","overflowY","borderRadius","_c3","Suggestions","borderLeft","_c4","ContentBox","marginBottom","_c5","SidebarButton","_c6","Dashboard","_s","userData","setUserData","role","setRole","friends","setFriends","peopleYouMayKnow","setPeopleYouMayKnow","settingsVisible","setSettingsVisible","loading","setLoading","currentConversationId","setCurrentConversationId","messages","setMessages","newMessage","setNewMessage","navigate","fetchUserData","_JSON$parse","token","localStorage","getItem","userId","JSON","parse","id","_response$data$roles","response","get","headers","Authorization","data","roles","fetchFriends","fetchPeopleYouMayKnow","error","console","message","fetchMessages","friendId","_JSON$parse2","handleSendMessage","_JSON$parse3","post","senderId","content","prev","toggleSettings","handleUpdateProfile","handleLogout","removeItem","handleGoToInvitations","handleSendFriendRequest","_JSON$parse4","alert","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","size","variant","username","sx","color","length","map","friend","button","primary","firstname","lastname","msg","index","fullWidth","placeholder","value","onChange","e","target","user","_c7","$RefreshReg$"],"sources":["/home/rouaa/Desktop/social-media-front/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../axiosConfig';\nimport { FaUserCircle, FaCog } from 'react-icons/fa';\nimport {\n    Box,\n    Button,\n    Divider,\n    Typography,\n    IconButton,\n    List,\n    ListItem,\n    ListItemText,\n    CircularProgress,\n    TextField,\n} from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst StyledContainer = styled(Box)({\n    display: 'flex',\n    flexDirection: 'row',\n    padding: '0',\n    margin: '0',\n    width: '100vw',\n    height: '100vh',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    overflow: 'hidden',\n    backgroundColor: '#DDE6ED',\n});\nconst Sidebar = styled(Box)(({ theme }) => ({\n    width: '20%',\n    maxWidth: '350px',\n    height: '100vh',\n    borderRight: '1px solid #ccc',\n    padding: '20px',\n    backgroundColor: '#c3d0d9',\n    flexShrink: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    boxShadow: '2px 0 5px rgba(0, 0, 0, 0.1)',\n    [theme.breakpoints.down('sm')]: {\n        width: '30%',\n    },\n    [theme.breakpoints.down('xs')]: {\n        display: 'none',\n    },\n}));\n\nconst MainContent = styled(Box)({\n    flexGrow: 1,\n    height: '100vh',\n    padding: '20px',\n    textAlign: 'center',\n    backgroundColor: '#ffffff',\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\n    overflowY: 'auto',\n    borderRadius: '10px',\n    margin: '20px',\n});\n\nconst Suggestions = styled(Box)(({ theme }) => ({\n    width: '30%', // Increased width to 30%\n    maxWidth: '350px', // Optional: Set a maximum width\n    height: '100vh',\n    borderLeft: '1px solid #ccc',\n    padding: '20px',\n    backgroundColor: '#c3d0d9',\n    flexShrink: 0,\n    boxShadow: '-2px 0 5px rgba(0, 0, 0, 0.1)',\n    display: 'flex', // Ensure the panel displays correctly\n    flexDirection: 'column', // Maintain column layout\n    [theme.breakpoints.down('sm')]: {\n        width: '40%', // Adjust width on smaller screens if necessary\n    },\n    [theme.breakpoints.down('xs')]: {\n        display: 'none',\n    },\n}));\n\n\nconst ContentBox = styled(Box)({\n    backgroundColor: '#ffffff',\n    padding: '15px',\n    borderRadius: '10px',\n    boxShadow: '0px 2px 5px rgba(0, 0, 0, 0.1)',\n    marginBottom: '10px',\n});\n\nconst SidebarButton = styled(IconButton)({\n    marginBottom: '10px',\n});\n\n\nconst Dashboard = () => {\n    const [userData, setUserData] = useState(null);\n    const [role, setRole] = useState('');\n    const [friends, setFriends] = useState([]);\n    const [peopleYouMayKnow, setPeopleYouMayKnow] = useState([]);\n    const [settingsVisible, setSettingsVisible] = useState(false);\n    const [loading, setLoading] = useState(true);\n    \n    // State for conversation and messages\n    const [currentConversationId, setCurrentConversationId] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    \n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchUserData = async () => {\n            const token = localStorage.getItem('token');\n            const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n            if (token && userId) {\n                try {\n                    const response = await axiosInstance.get(`/api/user/id/${userId}`, {\n                        headers: { Authorization: `Bearer ${token}` },\n                    });\n                    setUserData(response.data);\n                    setRole(response.data.roles?.[0] || 'Guest');\n                    await fetchFriends(userId, token);\n                    await fetchPeopleYouMayKnow(userId, token);\n                } catch (error) {\n                    console.error('Failed to fetch user data:', error.response ? error.response.data : error.message);\n                    navigate('/login');\n                } finally {\n                    setLoading(false);\n                }\n            } else {\n                navigate('/login');\n            }\n        };\n\n        fetchUserData();\n    }, [navigate]);\n\n    const fetchFriends = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/api/user/friends/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setFriends(response.data);\n        } catch (error) {\n            console.error('Failed to fetch friends:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const fetchPeopleYouMayKnow = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/user-service/api/friend-request/not-friends/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setPeopleYouMayKnow(response.data);\n        } catch (error) {\n            console.error('Failed to fetch people you may know:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const fetchMessages = async (friendId) => {\n    const token = localStorage.getItem('token');\n    const userId = JSON.parse(localStorage.getItem('user'))?.id; // Get the sender's ID\n\n    try {\n        const response = await axiosInstance.get(`/api/messages/between/${userId}/${friendId}`, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        setMessages(response.data);\n        setCurrentConversationId(friendId);\n    } catch (error) {\n        console.error('Failed to fetch messages:', error.response ? error.response.data : error.message);\n    }\n};\n\nconst handleSendMessage = async () => {\n    const token = localStorage.getItem('token');\n    const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n    if (newMessage && token && currentConversationId) {\n        try {\n            await axiosInstance.post(`/api/messages/between/${userId}/${currentConversationId}`, {\n                senderId: userId,\n                content: newMessage,\n            }, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setMessages((prev) => [...prev, { senderId: userId, content: newMessage }]); // Update messages state\n            setNewMessage(''); // Clear input\n        } catch (error) {\n            console.error('Failed to send message:', error.response ? error.response.data : error.message);\n        }\n    }\n};\n\n\n    const toggleSettings = () => {\n        setSettingsVisible((prev) => !prev);\n    };\n\n    const handleUpdateProfile = () => {\n        navigate('/update-profile');\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        navigate('/login');\n    };\n\n    const handleGoToInvitations = () => {\n        navigate('/invitations');\n    };\n\n    const handleSendFriendRequest = async (friendId) => {\n        const token = localStorage.getItem('token');\n        const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n        if (token && userId) {\n            try {\n                await axiosInstance.post(`/user-service/api/friend-request/${userId}/${friendId}`, {}, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                alert('Friend request sent successfully!');\n            } catch (error) {\n                console.error('Failed to send friend request:', error.response ? error.response.data : error.message);\n                alert('Failed to send friend request. Please try again later.');\n            }\n        }\n    };\n\n    if (loading) {\n        return <CircularProgress />;\n    }\n\n    return (\n        <StyledContainer>\n            <Sidebar>\n                <div>\n                    <SidebarButton onClick={() => navigate('/profile')}>\n                        <FaUserCircle size={50} />\n                    </SidebarButton>\n                    <Typography variant=\"h5\">{userData ? userData.username : 'Guest'}</Typography>\n                    <Divider sx={{ margin: '10px 0' }} />\n\n                    <ContentBox>\n                        <Typography variant=\"h6\" sx={{ color: '#27374D' }}>Friends List</Typography>\n                        <List>\n                            {friends.length > 0 ? (\n                                friends.map((friend) => (\n                                    <ListItem key={friend.id} button onClick={() => fetchMessages(friend.id)}>\n                                        <ListItemText primary={`${friend.firstname} ${friend.lastname}`} />\n                                    </ListItem>\n                                ))\n                            ) : (\n                                <ListItem>\n                                    <ListItemText primary=\"No friends found.\" />\n                                </ListItem>\n                            )}\n                        </List>\n                    </ContentBox>\n                </div>\n\n                <div>\n                    <SidebarButton onClick={toggleSettings}>\n                        <FaCog size={20} />\n                    </SidebarButton>\n\n                    {settingsVisible && (\n                        <Box>\n                            <Button onClick={handleUpdateProfile} variant=\"outlined\" sx={{ marginBottom: '5px' }}>\n                                Update Profile\n                            </Button>\n                            <Button onClick={handleLogout} variant=\"outlined\">\n                                Logout\n                            </Button>\n                        </Box>\n                    )}\n                </div>\n            </Sidebar>\n\n            <MainContent>\n                <Typography variant=\"h4\" sx={{ color: '#27374D' }}>Welcome to your Dashboard!</Typography>\n                <Typography variant=\"body1\" sx={{ margin: '20px 0' }}>\n                    This area can be used for various widgets or information.\n                </Typography>\n\n                {/* Conversation Section */}\n                {currentConversationId && (\n                    <Box>\n                        <Typography variant=\"h5\">Conversation with {currentConversationId}</Typography>\n                        <List>\n                            {messages.map((msg, index) => (\n                                <ListItem key={index} sx={{ justifyContent: msg.senderId === JSON.parse(localStorage.getItem('user')).id ? 'flex-end' : 'flex-start' }}>\n                                    <ListItemText primary={msg.content} />\n                                </ListItem>\n                            ))}\n                        </List>\n                        <TextField\n                            variant=\"outlined\"\n                            fullWidth\n                            placeholder=\"Type a message...\"\n                            value={newMessage}\n                            onChange={(e) => setNewMessage(e.target.value)}\n                            sx={{ marginBottom: '10px' }}\n                        />\n                        <Button variant=\"contained\" onClick={handleSendMessage}>\n                            Send\n                        </Button>\n                    </Box>\n                )}\n            </MainContent>\n\n            <Suggestions>\n                <ContentBox>\n                    <Typography variant=\"h6\" sx={{ color: '#27374D' }}>People You May Know</Typography>\n                    <List>\n                        {peopleYouMayKnow.length > 0 ? (\n                            peopleYouMayKnow.map((user) => (\n                                <ListItem key={user.id}>\n                                    <ListItemText primary={user.username} />\n                                    <Button \n                                        variant=\"outlined\" \n                                        size=\"small\" \n                                        onClick={() => handleSendFriendRequest(user.id)}\n                                    >\n                                        Add Friend\n                                    </Button>\n                                </ListItem>\n                            ))\n                        ) : (\n                            <ListItem>\n                                <ListItemText primary=\"No suggestions available.\" />\n                            </ListItem>\n                        )}\n                    </List>\n                </ContentBox>\n            </Suggestions>\n        </StyledContainer>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}