{"ast":null,"code":"var _jsxFileName = \"/home/rouaa/Desktop/social-media-front/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../axiosConfig';\nimport { FaUserCircle, FaCog } from 'react-icons/fa';\nimport { Box, Button, Divider, Typography, IconButton, List, ListItem, ListItemText, CircularProgress, TextField } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledContainer = styled(Box)({\n  display: 'flex',\n  flexDirection: 'row',\n  padding: '0',\n  margin: '0',\n  width: '100vw',\n  height: '100vh',\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  overflow: 'hidden',\n  backgroundColor: '#DDE6ED'\n});\n_c = StyledContainer;\nconst Sidebar = styled(Box)(({\n  theme\n}) => ({\n  width: '20%',\n  maxWidth: '350px',\n  height: '100vh',\n  borderRight: '1px solid #ccc',\n  padding: '20px',\n  backgroundColor: '#c3d0d9',\n  flexShrink: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  boxShadow: '2px 0 5px rgba(0, 0, 0, 0.1)',\n  [theme.breakpoints.down('sm')]: {\n    width: '30%'\n  },\n  [theme.breakpoints.down('xs')]: {\n    display: 'none'\n  }\n}));\n_c2 = Sidebar;\nconst MainContent = styled(Box)({\n  flexGrow: 1,\n  height: '100vh',\n  padding: '20px',\n  textAlign: 'center',\n  backgroundColor: '#ffffff',\n  boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\n  overflowY: 'auto',\n  borderRadius: '10px',\n  margin: '20px'\n});\n_c3 = MainContent;\nconst Suggestions = styled(Box)(({\n  theme\n}) => ({\n  width: '30%',\n  maxWidth: '350px',\n  height: '100vh',\n  borderLeft: '1px solid #ccc',\n  padding: '20px',\n  backgroundColor: '#c3d0d9',\n  flexShrink: 0,\n  boxShadow: '-2px 0 5px rgba(0, 0, 0, 0.1)',\n  display: 'flex',\n  flexDirection: 'column',\n  [theme.breakpoints.down('sm')]: {\n    width: '40%'\n  },\n  [theme.breakpoints.down('xs')]: {\n    display: 'none'\n  }\n}));\n_c4 = Suggestions;\nconst ContentBox = styled(Box)({\n  backgroundColor: '#ffffff',\n  padding: '15px',\n  borderRadius: '10px',\n  boxShadow: '0px 2px 5px rgba(0, 0, 0, 0.1)',\n  marginBottom: '10px'\n});\n_c5 = ContentBox;\nconst SidebarButton = styled(IconButton)({\n  marginBottom: '10px'\n});\n_c6 = SidebarButton;\nconst ConversationContainer = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '10px',\n  borderRadius: '10px',\n  backgroundColor: '#f5f5f5',\n  height: '70vh',\n  overflowY: 'auto'\n});\n_c7 = ConversationContainer;\nconst MessageBox = styled(Box)({\n  padding: '10px',\n  backgroundColor: '#e0f7fa',\n  borderRadius: '10px',\n  margin: '5px 0',\n  width: '80%',\n  textAlign: 'left'\n});\n_c8 = MessageBox;\nconst Dashboard = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [role, setRole] = useState('');\n  const [friends, setFriends] = useState([]);\n  const [peopleYouMayKnow, setPeopleYouMayKnow] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedFriend, setSelectedFriend] = useState(null);\n  const [conversations, setConversations] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      var _JSON$parse;\n      const token = localStorage.getItem('token');\n      const userId = (_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.id;\n      if (token && userId) {\n        try {\n          var _response$data$roles;\n          const response = await axiosInstance.get(`/api/user/id/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setUserData(response.data);\n          setRole(((_response$data$roles = response.data.roles) === null || _response$data$roles === void 0 ? void 0 : _response$data$roles[0]) || 'Guest');\n          await fetchFriends(userId, token);\n          await fetchPeopleYouMayKnow(userId, token);\n        } catch (error) {\n          console.error('Failed to fetch user data:', error.response ? error.response.data : error.message);\n          navigate('/login');\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        navigate('/login');\n      }\n    };\n    fetchUserData();\n  }, [navigate]);\n  const fetchFriends = async (userId, token) => {\n    try {\n      const response = await axiosInstance.get(`/api/user/friends/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setFriends(response.data);\n    } catch (error) {\n      console.error('Failed to fetch friends:', error.response ? error.response.data : error.message);\n    }\n  };\n  const fetchPeopleYouMayKnow = async (userId, token) => {\n    try {\n      const response = await axiosInstance.get(`/user-service/api/friend-request/not-friends/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPeopleYouMayKnow(response.data);\n    } catch (error) {\n      console.error('Failed to fetch people you may know:', error.response ? error.response.data : error.message);\n    }\n  };\n  const fetchConversation = async friendId => {\n    var _JSON$parse2;\n    const token = localStorage.getItem('token');\n    const userId = (_JSON$parse2 = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse2 === void 0 ? void 0 : _JSON$parse2.id;\n    if (token && userId) {\n      try {\n        const response = await axiosInstance.get(`/api/message/between/${userId}/${friendId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setConversations(response.data);\n        setSelectedFriend(friendId);\n      } catch (error) {\n        console.error('Failed to fetch conversation:', error.response ? error.response.data : error.message);\n      }\n    }\n  };\n  const handleSendMessage = async () => {\n    var _JSON$parse3;\n    if (currentMessage.trim() === '' || !selectedFriend) return;\n    const token = localStorage.getItem('token');\n    const userId = (_JSON$parse3 = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse3 === void 0 ? void 0 : _JSON$parse3.id;\n    try {\n      await axiosInstance.post('/api/message', {\n        senderId: userId,\n        recipientId: selectedFriend,\n        content: currentMessage\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCurrentMessage(''); // Clear input after sending\n      await fetchConversation(selectedFriend); // Refresh conversation\n    } catch (error) {\n      console.error('Failed to send message:', error.response ? error.response.data : error.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SidebarButton, {\n          onClick: () => navigate('/profile'),\n          children: /*#__PURE__*/_jsxDEV(FaUserCircle, {\n            size: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: userData ? userData.username : 'Guest'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            margin: '10px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ContentBox, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: '#27374D'\n            },\n            children: \"Friends List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: friends.length > 0 ? friends.map(friend => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              onClick: () => fetchConversation(friend.id),\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${friend.firstname} ${friend.lastname}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 41\n              }, this)\n            }, friend.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"No friends found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          color: '#27374D'\n        },\n        children: \"Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), selectedFriend ? /*#__PURE__*/_jsxDEV(ConversationContainer, {\n        children: conversations.length > 0 ? conversations.map(message => /*#__PURE__*/_jsxDEV(MessageBox, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 37\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No conversation yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Select a friend to view the conversation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }, this), selectedFriend && /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          value: currentMessage,\n          onChange: e => setCurrentMessage(e.target.value),\n          placeholder: \"Type your message...\",\n          fullWidth: true,\n          multiline: true,\n          rows: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSendMessage,\n          variant: \"contained\",\n          color: \"primary\",\n          sx: {\n            marginTop: '10px'\n          },\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Suggestions, {\n      children: /*#__PURE__*/_jsxDEV(ContentBox, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: '#27374D'\n          },\n          children: \"People You May Know\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: peopleYouMayKnow.length > 0 ? peopleYouMayKnow.map(person => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `${person.username}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 25\n            }, this)\n          }, person.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 21\n          }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"No suggestions available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/invitations') // Add the navigation action\n          ,\n          variant: \"contained\",\n          color: \"primary\",\n          sx: {\n            marginTop: '10px'\n          },\n          children: \"Invitations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"q5hOI6pn8tsIY79JiBnpDOc/fiQ=\", false, function () {\n  return [useNavigate];\n});\n_c9 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"MainContent\");\n$RefreshReg$(_c4, \"Suggestions\");\n$RefreshReg$(_c5, \"ContentBox\");\n$RefreshReg$(_c6, \"SidebarButton\");\n$RefreshReg$(_c7, \"ConversationContainer\");\n$RefreshReg$(_c8, \"MessageBox\");\n$RefreshReg$(_c9, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axiosInstance","FaUserCircle","FaCog","Box","Button","Divider","Typography","IconButton","List","ListItem","ListItemText","CircularProgress","TextField","styled","jsxDEV","_jsxDEV","StyledContainer","display","flexDirection","padding","margin","width","height","position","top","left","overflow","backgroundColor","_c","Sidebar","theme","maxWidth","borderRight","flexShrink","justifyContent","boxShadow","breakpoints","down","_c2","MainContent","flexGrow","textAlign","overflowY","borderRadius","_c3","Suggestions","borderLeft","_c4","ContentBox","marginBottom","_c5","SidebarButton","_c6","ConversationContainer","alignItems","_c7","MessageBox","_c8","Dashboard","_s","userData","setUserData","role","setRole","friends","setFriends","peopleYouMayKnow","setPeopleYouMayKnow","loading","setLoading","selectedFriend","setSelectedFriend","conversations","setConversations","currentMessage","setCurrentMessage","navigate","fetchUserData","_JSON$parse","token","localStorage","getItem","userId","JSON","parse","id","_response$data$roles","response","get","headers","Authorization","data","roles","fetchFriends","fetchPeopleYouMayKnow","error","console","message","fetchConversation","friendId","_JSON$parse2","handleSendMessage","_JSON$parse3","trim","post","senderId","recipientId","content","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","size","variant","username","sx","color","length","map","friend","button","primary","firstname","lastname","value","onChange","e","target","placeholder","fullWidth","multiline","rows","marginTop","person","_c9","$RefreshReg$"],"sources":["/home/rouaa/Desktop/social-media-front/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../axiosConfig';\nimport { FaUserCircle, FaCog } from 'react-icons/fa';\nimport {\n    Box,\n    Button,\n    Divider,\n    Typography,\n    IconButton,\n    List,\n    ListItem,\n    ListItemText,\n    CircularProgress,\n    TextField,\n} from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst StyledContainer = styled(Box)({\n    display: 'flex',\n    flexDirection: 'row',\n    padding: '0',\n    margin: '0',\n    width: '100vw',\n    height: '100vh',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    overflow: 'hidden',\n    backgroundColor: '#DDE6ED',\n});\n\nconst Sidebar = styled(Box)(({ theme }) => ({\n    width: '20%',\n    maxWidth: '350px',\n    height: '100vh',\n    borderRight: '1px solid #ccc',\n    padding: '20px',\n    backgroundColor: '#c3d0d9',\n    flexShrink: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    boxShadow: '2px 0 5px rgba(0, 0, 0, 0.1)',\n    [theme.breakpoints.down('sm')]: {\n        width: '30%',\n    },\n    [theme.breakpoints.down('xs')]: {\n        display: 'none',\n    },\n}));\n\nconst MainContent = styled(Box)({\n    flexGrow: 1,\n    height: '100vh',\n    padding: '20px',\n    textAlign: 'center',\n    backgroundColor: '#ffffff',\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\n    overflowY: 'auto',\n    borderRadius: '10px',\n    margin: '20px',\n});\n\nconst Suggestions = styled(Box)(({ theme }) => ({\n    width: '30%',\n    maxWidth: '350px',\n    height: '100vh',\n    borderLeft: '1px solid #ccc',\n    padding: '20px',\n    backgroundColor: '#c3d0d9',\n    flexShrink: 0,\n    boxShadow: '-2px 0 5px rgba(0, 0, 0, 0.1)',\n    display: 'flex',\n    flexDirection: 'column',\n    [theme.breakpoints.down('sm')]: {\n        width: '40%',\n    },\n    [theme.breakpoints.down('xs')]: {\n        display: 'none',\n    },\n}));\n\nconst ContentBox = styled(Box)({\n    backgroundColor: '#ffffff',\n    padding: '15px',\n    borderRadius: '10px',\n    boxShadow: '0px 2px 5px rgba(0, 0, 0, 0.1)',\n    marginBottom: '10px',\n});\n\nconst SidebarButton = styled(IconButton)({\n    marginBottom: '10px',\n});\n\nconst ConversationContainer = styled(Box)({\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '10px',\n    borderRadius: '10px',\n    backgroundColor: '#f5f5f5',\n    height: '70vh',\n    overflowY: 'auto',\n});\n\nconst MessageBox = styled(Box)({\n    padding: '10px',\n    backgroundColor: '#e0f7fa',\n    borderRadius: '10px',\n    margin: '5px 0',\n    width: '80%',\n    textAlign: 'left',\n});\n\nconst Dashboard = () => {\n    const [userData, setUserData] = useState(null);\n    const [role, setRole] = useState('');\n    const [friends, setFriends] = useState([]);\n    const [peopleYouMayKnow, setPeopleYouMayKnow] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [selectedFriend, setSelectedFriend] = useState(null);\n    const [conversations, setConversations] = useState([]);\n    const [currentMessage, setCurrentMessage] = useState('');\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchUserData = async () => {\n            const token = localStorage.getItem('token');\n            const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n            if (token && userId) {\n                try {\n                    const response = await axiosInstance.get(`/api/user/id/${userId}`, {\n                        headers: { Authorization: `Bearer ${token}` },\n                    });\n                    setUserData(response.data);\n                    setRole(response.data.roles?.[0] || 'Guest');\n                    await fetchFriends(userId, token);\n                    await fetchPeopleYouMayKnow(userId, token);\n                } catch (error) {\n                    console.error('Failed to fetch user data:', error.response ? error.response.data : error.message);\n                    navigate('/login');\n                } finally {\n                    setLoading(false);\n                }\n            } else {\n                navigate('/login');\n            }\n        };\n\n        fetchUserData();\n    }, [navigate]);\n\n    const fetchFriends = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/api/user/friends/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setFriends(response.data);\n        } catch (error) {\n            console.error('Failed to fetch friends:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const fetchPeopleYouMayKnow = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/user-service/api/friend-request/not-friends/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setPeopleYouMayKnow(response.data);\n        } catch (error) {\n            console.error('Failed to fetch people you may know:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const fetchConversation = async (friendId) => {\n        const token = localStorage.getItem('token');\n        const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n        if (token && userId) {\n            try {\n                const response = await axiosInstance.get(`/api/message/between/${userId}/${friendId}`, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                setConversations(response.data);\n                setSelectedFriend(friendId);\n            } catch (error) {\n                console.error('Failed to fetch conversation:', error.response ? error.response.data : error.message);\n            }\n        }\n    };\n\n    const handleSendMessage = async () => {\n        if (currentMessage.trim() === '' || !selectedFriend) return;\n\n        const token = localStorage.getItem('token');\n        const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n        try {\n            await axiosInstance.post('/api/message', {\n                senderId: userId,\n                recipientId: selectedFriend,\n                content: currentMessage,\n            }, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setCurrentMessage(''); // Clear input after sending\n            await fetchConversation(selectedFriend); // Refresh conversation\n        } catch (error) {\n            console.error('Failed to send message:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    if (loading) {\n        return <CircularProgress />;\n    }\n\n    return (\n        <StyledContainer>\n            <Sidebar>\n                <div>\n                    <SidebarButton onClick={() => navigate('/profile')}>\n                        <FaUserCircle size={50} />\n                    </SidebarButton>\n                    <Typography variant=\"h5\">{userData ? userData.username : 'Guest'}</Typography>\n                    <Divider sx={{ margin: '10px 0' }} />\n\n                    <ContentBox>\n                        <Typography variant=\"h6\" sx={{ color: '#27374D' }}>Friends List</Typography>\n                        <List>\n                            {friends.length > 0 ? (\n                                friends.map((friend) => (\n                                    <ListItem key={friend.id} button onClick={() => fetchConversation(friend.id)}>\n                                        <ListItemText primary={`${friend.firstname} ${friend.lastname}`} />\n                                    </ListItem>\n                                ))\n                            ) : (\n                                <ListItem>\n                                    <ListItemText primary=\"No friends found.\" />\n                                </ListItem>\n                            )}\n                        </List>\n                    </ContentBox>\n                </div>\n            </Sidebar>\n\n            <MainContent>\n                <Typography variant=\"h4\" sx={{ color: '#27374D' }}>Conversation</Typography>\n                {selectedFriend ? (\n                    <ConversationContainer>\n                        {conversations.length > 0 ? (\n                            conversations.map((message) => (\n                                <MessageBox key={message.id}>\n                                    <Typography>{message.content}</Typography>\n                                </MessageBox>\n                            ))\n                        ) : (\n                            <Typography>No conversation yet.</Typography>\n                        )}\n                    </ConversationContainer>\n                ) : (\n                    <Typography>Select a friend to view the conversation.</Typography>\n                )}\n\n                {selectedFriend && (\n                    <Box>\n                        <TextField\n                            value={currentMessage}\n                            onChange={(e) => setCurrentMessage(e.target.value)}\n                            placeholder=\"Type your message...\"\n                            fullWidth\n                            multiline\n                            rows={2}\n                        />\n                        <Button onClick={handleSendMessage} variant=\"contained\" color=\"primary\" sx={{ marginTop: '10px' }}>\n                            Send Message\n                        </Button>\n                    </Box>\n                )}\n            </MainContent>\n\n            <Suggestions>\n    <ContentBox>\n        <Typography variant=\"h6\" sx={{ color: '#27374D' }}>People You May Know</Typography>\n        <List>\n            {peopleYouMayKnow.length > 0 ? (\n                peopleYouMayKnow.map((person) => (\n                    <ListItem key={person.id}>\n                        <ListItemText primary={`${person.username}`} />\n                    </ListItem>\n                ))\n            ) : (\n                <ListItem>\n                    <ListItemText primary=\"No suggestions available.\" />\n                </ListItem>\n            )}\n        </List>\n        <Button \n            onClick={() => navigate('/invitations')} // Add the navigation action\n            variant=\"contained\" \n            color=\"primary\" \n            sx={{ marginTop: '10px' }}\n        >\n            Invitations\n        </Button>\n    </ContentBox>\n</Suggestions>\n\n        </StyledContainer>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}