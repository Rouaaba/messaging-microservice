{"ast":null,"code":"// axiosConfig.js\nimport axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'http://172.25.0.7:8080',\n  // Set your base URL\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n// Adding an interceptor to include the token\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // Retrieve token from local storage\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`; // Set the Authorization header\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject"],"sources":["/home/rouaa/Desktop/social-media-front/src/axiosConfig.js"],"sourcesContent":["// axiosConfig.js\nimport axios from 'axios';\n\nconst axiosInstance = axios.create({\n    baseURL: 'http://172.25.0.7:8080', // Set your base URL\n    headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n});\n// Adding an interceptor to include the token\naxiosInstance.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token'); // Retrieve token from local storage\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`; // Set the Authorization header\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\nexport default axiosInstance;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC/BC,OAAO,EAAE,wBAAwB;EAAE;EACnCC,OAAO,EAAE;IACL,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ;AACN,CAAC,CAAC;AACF;AACAH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACjCC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE,CAAC,CAAC;EACtD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAK,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}