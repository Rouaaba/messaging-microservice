{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import axiosInstance from'../axiosConfig';import{FaUserCircle,FaCog}from'react-icons/fa';import{Box,Button,Divider,Typography,IconButton,List,ListItem,ListItemText,CircularProgress,AppBar,Toolbar,Container}from'@mui/material';import{styled}from'@mui/system';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StyledContainer=styled(Container)({display:'flex',padding:'20px'});const Sidebar=styled(Box)({width:'250px',borderRight:'1px solid #ccc',padding:'20px',backgroundColor:'#f5f5f5'});const SidebarButton=styled(IconButton)({marginBottom:'10px'});const MainContent=styled(Box)({flexGrow:1,padding:'20px',textAlign:'center',backgroundColor:'#ffffff'});const Suggestions=styled(Box)({width:'250px',borderLeft:'1px solid #ccc',padding:'20px',backgroundColor:'#f5f5f5'});const Dashboard=()=>{const[userData,setUserData]=useState(null);const[role,setRole]=useState('');const[friends,setFriends]=useState([]);const[peopleYouMayKnow,setPeopleYouMayKnow]=useState([]);const[settingsVisible,setSettingsVisible]=useState(false);const[loading,setLoading]=useState(true);const navigate=useNavigate();useEffect(()=>{const fetchUserData=async()=>{var _JSON$parse;const token=localStorage.getItem('token');const userId=(_JSON$parse=JSON.parse(localStorage.getItem('user')))===null||_JSON$parse===void 0?void 0:_JSON$parse.id;if(token&&userId){try{var _response$data$roles;const response=await axiosInstance.get(`/api/user/id/${userId}`,{headers:{Authorization:`Bearer ${token}`}});setUserData(response.data);setRole(((_response$data$roles=response.data.roles)===null||_response$data$roles===void 0?void 0:_response$data$roles[0])||'Guest');await fetchFriends(userId,token);await fetchPeopleYouMayKnow(userId,token);}catch(error){console.error('Failed to fetch user data:',error.response?error.response.data:error.message);navigate('/login');}finally{setLoading(false);}}else{navigate('/login');}};fetchUserData();},[navigate]);const fetchFriends=async(userId,token)=>{try{const response=await axiosInstance.get(`/api/user/friends/${userId}`,{headers:{Authorization:`Bearer ${token}`}});setFriends(response.data);}catch(error){console.error('Failed to fetch friends:',error.response?error.response.data:error.message);}};const fetchPeopleYouMayKnow=async(userId,token)=>{try{const response=await axiosInstance.get(`/user-service/api/friend-request/not-friends/${userId}`,{headers:{Authorization:`Bearer ${token}`}});setPeopleYouMayKnow(response.data);}catch(error){console.error('Failed to fetch people you may know:',error.response?error.response.data:error.message);}};const toggleSettings=()=>{setSettingsVisible(prev=>!prev);};const handleUpdateProfile=()=>{navigate('/update-profile');};const handleLogout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');navigate('/login');// Redirect to login page\n};const handleGoToInvitations=()=>{navigate('/invitations');// Redirect to Invitations page\n};if(loading){return/*#__PURE__*/_jsx(CircularProgress,{});}return/*#__PURE__*/_jsxs(StyledContainer,{children:[/*#__PURE__*/_jsxs(Sidebar,{children:[/*#__PURE__*/_jsx(SidebarButton,{onClick:()=>navigate('/profile'),children:/*#__PURE__*/_jsx(FaUserCircle,{size:50})}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:userData?userData.username:'Guest'}),/*#__PURE__*/_jsx(Divider,{sx:{margin:'10px 0'}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Friends List\"}),/*#__PURE__*/_jsx(List,{children:friends.length>0?friends.map(friend=>/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:`${friend.firstname} ${friend.lastname}`})},friend.id)):/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:\"No friends found.\"})})}),/*#__PURE__*/_jsx(SidebarButton,{onClick:toggleSettings,children:/*#__PURE__*/_jsx(FaCog,{size:20})}),settingsVisible&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleUpdateProfile,variant:\"outlined\",sx:{marginBottom:'5px'},children:\"Update Profile\"}),/*#__PURE__*/_jsx(Button,{onClick:handleLogout,variant:\"outlined\",children:\"Logout\"})]})]}),/*#__PURE__*/_jsxs(MainContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:\"Welcome to your Dashboard!\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"This area can be used for various widgets or information.\"})]}),/*#__PURE__*/_jsxs(Suggestions,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"People You May Know\"}),/*#__PURE__*/_jsx(List,{children:peopleYouMayKnow.length>0?peopleYouMayKnow.map(user=>/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:user.username})},user.id)):/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:\"No suggestions.\"})})}),/*#__PURE__*/_jsx(Button,{onClick:handleGoToInvitations,variant:\"outlined\",fullWidth:true,children:\"Invitations\"})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axiosInstance","FaUserCircle","FaCog","Box","Button","Divider","Typography","IconButton","List","ListItem","ListItemText","CircularProgress","AppBar","Toolbar","Container","styled","jsx","_jsx","jsxs","_jsxs","StyledContainer","display","padding","Sidebar","width","borderRight","backgroundColor","SidebarButton","marginBottom","MainContent","flexGrow","textAlign","Suggestions","borderLeft","Dashboard","userData","setUserData","role","setRole","friends","setFriends","peopleYouMayKnow","setPeopleYouMayKnow","settingsVisible","setSettingsVisible","loading","setLoading","navigate","fetchUserData","_JSON$parse","token","localStorage","getItem","userId","JSON","parse","id","_response$data$roles","response","get","headers","Authorization","data","roles","fetchFriends","fetchPeopleYouMayKnow","error","console","message","toggleSettings","prev","handleUpdateProfile","handleLogout","removeItem","handleGoToInvitations","children","onClick","size","variant","username","sx","margin","length","map","friend","primary","firstname","lastname","user","fullWidth"],"sources":["/home/rouaa/Desktop/social-media-front/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../axiosConfig';\nimport { FaUserCircle, FaCog } from 'react-icons/fa';\nimport {\n    Box,\n    Button,\n    Divider,\n    Typography,\n    IconButton,\n    List,\n    ListItem,\n    ListItemText,\n    CircularProgress,\n    AppBar,\n    Toolbar,\n    Container,\n} from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst StyledContainer = styled(Container)({\n    display: 'flex',\n    padding: '20px',\n});\n\nconst Sidebar = styled(Box)({\n    width: '250px',\n    borderRight: '1px solid #ccc',\n    padding: '20px',\n    backgroundColor: '#f5f5f5',\n});\n\nconst SidebarButton = styled(IconButton)({\n    marginBottom: '10px',\n});\n\nconst MainContent = styled(Box)({\n    flexGrow: 1,\n    padding: '20px',\n    textAlign: 'center',\n    backgroundColor: '#ffffff',\n});\n\nconst Suggestions = styled(Box)({\n    width: '250px',\n    borderLeft: '1px solid #ccc',\n    padding: '20px',\n    backgroundColor: '#f5f5f5',\n});\n\nconst Dashboard = () => {\n    const [userData, setUserData] = useState(null);\n    const [role, setRole] = useState('');\n    const [friends, setFriends] = useState([]);\n    const [peopleYouMayKnow, setPeopleYouMayKnow] = useState([]);\n    const [settingsVisible, setSettingsVisible] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchUserData = async () => {\n            const token = localStorage.getItem('token');\n            const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n            if (token && userId) {\n                try {\n                    const response = await axiosInstance.get(`/api/user/id/${userId}`, {\n                        headers: { Authorization: `Bearer ${token}` },\n                    });\n                    setUserData(response.data);\n                    setRole(response.data.roles?.[0] || 'Guest');\n                    await fetchFriends(userId, token);\n                    await fetchPeopleYouMayKnow(userId, token);\n                } catch (error) {\n                    console.error('Failed to fetch user data:', error.response ? error.response.data : error.message);\n                    navigate('/login');\n                } finally {\n                    setLoading(false);\n                }\n            } else {\n                navigate('/login');\n            }\n        };\n\n        fetchUserData();\n    }, [navigate]);\n\n    const fetchFriends = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/api/user/friends/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setFriends(response.data);\n        } catch (error) {\n            console.error('Failed to fetch friends:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const fetchPeopleYouMayKnow = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/user-service/api/friend-request/not-friends/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setPeopleYouMayKnow(response.data);\n        } catch (error) {\n            console.error('Failed to fetch people you may know:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const toggleSettings = () => {\n        setSettingsVisible((prev) => !prev);\n    };\n\n    const handleUpdateProfile = () => {\n        navigate('/update-profile');\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        navigate('/login'); // Redirect to login page\n    };\n\n    const handleGoToInvitations = () => {\n        navigate('/invitations'); // Redirect to Invitations page\n    };\n\n    if (loading) {\n        return <CircularProgress />;\n    }\n\n    return (\n        <StyledContainer>\n            <Sidebar>\n                <SidebarButton onClick={() => navigate('/profile')}>\n                    <FaUserCircle size={50} />\n                </SidebarButton>\n                <Typography variant=\"h5\">{userData ? userData.username : 'Guest'}</Typography>\n                <Divider sx={{ margin: '10px 0' }} />\n\n                <Typography variant=\"h6\">Friends List</Typography>\n                <List>\n                    {friends.length > 0 ? (\n                        friends.map((friend) => (\n                            <ListItem key={friend.id}>\n                                <ListItemText primary={`${friend.firstname} ${friend.lastname}`} />\n                            </ListItem>\n                        ))\n                    ) : (\n                        <ListItem>\n                            <ListItemText primary=\"No friends found.\" />\n                        </ListItem>\n                    )}\n                </List>\n\n                <SidebarButton onClick={toggleSettings}>\n                    <FaCog size={20} />\n                </SidebarButton>\n\n                {settingsVisible && (\n                    <Box>\n                        <Button onClick={handleUpdateProfile} variant=\"outlined\" sx={{ marginBottom: '5px' }}>\n                            Update Profile\n                        </Button>\n                        <Button onClick={handleLogout} variant=\"outlined\">\n                            Logout\n                        </Button>\n                    </Box>\n                )}\n            </Sidebar>\n\n            <MainContent>\n                <Typography variant=\"h4\">Welcome to your Dashboard!</Typography>\n                <Typography variant=\"body1\">This area can be used for various widgets or information.</Typography>\n            </MainContent>\n\n            <Suggestions>\n                <Typography variant=\"h6\">People You May Know</Typography>\n                <List>\n                    {peopleYouMayKnow.length > 0 ? (\n                        peopleYouMayKnow.map((user) => (\n                            <ListItem key={user.id}>\n                                <ListItemText primary={user.username} />\n                            </ListItem>\n                        ))\n                    ) : (\n                        <ListItem>\n                            <ListItemText primary=\"No suggestions.\" />\n                        </ListItem>\n                    )}\n                </List>\n                <Button onClick={handleGoToInvitations} variant=\"outlined\" fullWidth>\n                    Invitations\n                </Button>\n            </Suggestions>\n        </StyledContainer>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}