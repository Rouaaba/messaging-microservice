{"ast":null,"code":"var _jsxFileName = \"/home/rouaa/Desktop/social-media-front/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../axiosConfig';\nimport { FaUserCircle, FaCog } from 'react-icons/fa';\nimport { Box, Button, Divider, Typography, IconButton, List, ListItem, ListItemText, CircularProgress, TextField } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledContainer = styled(Box)({\n  display: 'flex',\n  flexDirection: 'row',\n  padding: '0',\n  margin: '0',\n  width: '100vw',\n  height: '100vh',\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  overflow: 'hidden',\n  backgroundColor: '#DDE6ED'\n});\n_c = StyledContainer;\nconst Sidebar = styled(Box)(({\n  theme\n}) => ({\n  width: '20%',\n  maxWidth: '350px',\n  height: '100vh',\n  borderRight: '1px solid #ccc',\n  padding: '20px',\n  backgroundColor: '#c3d0d9',\n  flexShrink: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  boxShadow: '2px 0 5px rgba(0, 0, 0, 0.1)'\n}));\n_c2 = Sidebar;\nconst MainContent = styled(Box)({\n  flexGrow: 1,\n  height: '100vh',\n  padding: '20px',\n  textAlign: 'center',\n  backgroundColor: '#ffffff',\n  boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\n  overflowY: 'auto',\n  borderRadius: '10px',\n  margin: '20px'\n});\n_c3 = MainContent;\nconst Suggestions = styled(Box)(({\n  theme\n}) => ({\n  width: '20%',\n  maxWidth: '250px',\n  height: '100vh',\n  borderLeft: '1px solid #ccc',\n  padding: '20px',\n  backgroundColor: '#c3d0d9',\n  flexShrink: 0,\n  boxShadow: '-2px 0 5px rgba(0, 0, 0, 0.1)'\n}));\n_c4 = Suggestions;\nconst ContentBox = styled(Box)({\n  backgroundColor: '#ffffff',\n  padding: '15px',\n  borderRadius: '10px',\n  boxShadow: '0px 2px 5px rgba(0, 0, 0, 0.1)',\n  marginBottom: '10px'\n});\n_c5 = ContentBox;\nconst SidebarButton = styled(IconButton)({\n  marginBottom: '10px'\n});\n_c6 = SidebarButton;\nconst Dashboard = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [role, setRole] = useState('');\n  const [friends, setFriends] = useState([]);\n  const [peopleYouMayKnow, setPeopleYouMayKnow] = useState([]);\n  const [selectedFriend, setSelectedFriend] = useState(null); // For conversation\n  const [conversation, setConversation] = useState([]);\n  const [newMessage, setNewMessage] = useState(''); // For sending new message\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      var _JSON$parse;\n      const token = localStorage.getItem('token');\n      const userId = (_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.id;\n      if (token && userId) {\n        try {\n          var _response$data$roles;\n          const response = await axiosInstance.get(`/api/user/id/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setUserData(response.data);\n          setRole(((_response$data$roles = response.data.roles) === null || _response$data$roles === void 0 ? void 0 : _response$data$roles[0]) || 'Guest');\n          await fetchFriends(userId, token);\n          await fetchPeopleYouMayKnow(userId, token);\n        } catch (error) {\n          console.error('Failed to fetch user data:', error.response ? error.response.data : error.message);\n          navigate('/login');\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        navigate('/login');\n      }\n    };\n    fetchUserData();\n  }, [navigate]);\n  const fetchFriends = async (userId, token) => {\n    try {\n      const response = await axiosInstance.get(`/api/user/friends/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setFriends(response.data);\n    } catch (error) {\n      console.error('Failed to fetch friends:', error.response ? error.response.data : error.message);\n    }\n  };\n  const fetchPeopleYouMayKnow = async (userId, token) => {\n    try {\n      const response = await axiosInstance.get(`/user-service/api/friend-request/not-friends/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPeopleYouMayKnow(response.data);\n    } catch (error) {\n      console.error('Failed to fetch people you may know:', error.response ? error.response.data : error.message);\n    }\n  };\n\n  // Fetch conversation with selected friend\n  const fetchConversation = async friendId => {\n    var _JSON$parse2;\n    const token = localStorage.getItem('token');\n    const userId = (_JSON$parse2 = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse2 === void 0 ? void 0 : _JSON$parse2.id;\n    if (token && userId) {\n      try {\n        const response = await axiosInstance.get(`/api/message/between/${userId}/${friendId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setConversation(response.data);\n      } catch (error) {\n        console.error('Failed to fetch conversation:', error.response ? error.response.data : error.message);\n      }\n    }\n  };\n\n  // Send new message\n  const sendMessage = async () => {\n    var _JSON$parse3;\n    const token = localStorage.getItem('token');\n    const userId = (_JSON$parse3 = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse3 === void 0 ? void 0 : _JSON$parse3.id;\n    if (newMessage && selectedFriend) {\n      try {\n        await axiosInstance.post(`/api/message/${userId}/${selectedFriend.id}`, {\n          content: newMessage\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setNewMessage(''); // Clear input field after sending\n        await fetchConversation(selectedFriend.id); // Update conversation\n      } catch (error) {\n        console.error('Failed to send message:', error.response ? error.response.data : error.message);\n      }\n    }\n  };\n  const toggleSettings = () => {\n    setSettingsVisible(prev => !prev);\n  };\n  const handleUpdateProfile = () => {\n    navigate('/update-profile');\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n  const handleGoToInvitations = () => {\n    navigate('/invitations');\n  };\n  const handleSendFriendRequest = async friendId => {\n    var _JSON$parse4;\n    const token = localStorage.getItem('token');\n    const userId = (_JSON$parse4 = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse4 === void 0 ? void 0 : _JSON$parse4.id;\n    if (token && userId) {\n      try {\n        await axiosInstance.post(`/user-service/api/friend-request/${userId}/${friendId}`, {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('Friend request sent successfully!');\n      } catch (error) {\n        console.error('Failed to send friend request:', error.response ? error.response.data : error.message);\n        alert('Failed to send friend request. Please try again later.');\n      }\n    }\n  };\n  const handleFriendClick = friend => {\n    setSelectedFriend(friend);\n    fetchConversation(friend.id); // Fetch conversation when a friend is clicked\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SidebarButton, {\n          onClick: () => navigate('/profile'),\n          children: /*#__PURE__*/_jsxDEV(FaUserCircle, {\n            size: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: userData ? userData.username : 'Guest'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            margin: '10px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ContentBox, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: '#27374D'\n            },\n            children: \"Friends List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: friends.length > 0 ? friends.map(friend => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              onClick: () => handleFriendClick(friend),\n              selected: selectedFriend && selectedFriend.id === friend.id // Highlight the selected friend\n              ,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${friend.firstname} ${friend.lastname}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 41\n              }, this)\n            }, friend.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"No friends found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: toggleSettings,\n          children: [/*#__PURE__*/_jsxDEV(FaCog, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), \" Settings\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), settingsVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleUpdateProfile,\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleGoToInvitations,\n            children: \"See Invitations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleLogout,\n            color: \"error\",\n            children: \"Log out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: selectedFriend ? /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: [\"Conversation with \", selectedFriend.firstname, \" \", selectedFriend.lastname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: conversation.length > 0 ? conversation.map(msg => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `${msg.senderId === currentUserId ? 'You' : selectedFriend.firstname}: ${msg.content}`,\n              secondary: new Date(msg.timestamp).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 41\n            }, this)\n          }, msg.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"No messages yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            label: \"Type a message\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: sendMessage,\n            sx: {\n              ml: 2\n            },\n            variant: \"contained\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Select a friend to start a conversation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Suggestions, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          color: '#27374D'\n        },\n        children: \"People You May Know\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          margin: '10px 0'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: peopleYouMayKnow.length > 0 ? peopleYouMayKnow.map(person => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${person.firstname} ${person.lastname}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleSendFriendRequest(person.id),\n            variant: \"outlined\",\n            color: \"primary\",\n            children: \"Add Friend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 33\n          }, this)]\n        }, person.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"No suggestions found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"4UxKpAo3flS9iybD2WHePD/hnQM=\", false, function () {\n  return [useNavigate];\n});\n_c7 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"MainContent\");\n$RefreshReg$(_c4, \"Suggestions\");\n$RefreshReg$(_c5, \"ContentBox\");\n$RefreshReg$(_c6, \"SidebarButton\");\n$RefreshReg$(_c7, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axiosInstance","FaUserCircle","FaCog","Box","Button","Divider","Typography","IconButton","List","ListItem","ListItemText","CircularProgress","TextField","styled","jsxDEV","_jsxDEV","StyledContainer","display","flexDirection","padding","margin","width","height","position","top","left","overflow","backgroundColor","_c","Sidebar","theme","maxWidth","borderRight","flexShrink","justifyContent","boxShadow","_c2","MainContent","flexGrow","textAlign","overflowY","borderRadius","_c3","Suggestions","borderLeft","_c4","ContentBox","marginBottom","_c5","SidebarButton","_c6","Dashboard","_s","userData","setUserData","role","setRole","friends","setFriends","peopleYouMayKnow","setPeopleYouMayKnow","selectedFriend","setSelectedFriend","conversation","setConversation","newMessage","setNewMessage","settingsVisible","setSettingsVisible","loading","setLoading","navigate","fetchUserData","_JSON$parse","token","localStorage","getItem","userId","JSON","parse","id","_response$data$roles","response","get","headers","Authorization","data","roles","fetchFriends","fetchPeopleYouMayKnow","error","console","message","fetchConversation","friendId","_JSON$parse2","sendMessage","_JSON$parse3","post","content","toggleSettings","prev","handleUpdateProfile","handleLogout","removeItem","handleGoToInvitations","handleSendFriendRequest","_JSON$parse4","alert","handleFriendClick","friend","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","size","variant","username","sx","color","length","map","button","selected","primary","firstname","lastname","msg","senderId","currentUserId","secondary","Date","timestamp","toLocaleString","alignItems","mt","value","onChange","e","target","label","fullWidth","ml","person","_c7","$RefreshReg$"],"sources":["/home/rouaa/Desktop/social-media-front/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../axiosConfig';\nimport { FaUserCircle, FaCog } from 'react-icons/fa';\nimport {\n    Box,\n    Button,\n    Divider,\n    Typography,\n    IconButton,\n    List,\n    ListItem,\n    ListItemText,\n    CircularProgress,\n    TextField\n} from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst StyledContainer = styled(Box)({\n    display: 'flex',\n    flexDirection: 'row',\n    padding: '0',\n    margin: '0',\n    width: '100vw',\n    height: '100vh',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    overflow: 'hidden',\n    backgroundColor: '#DDE6ED',\n});\n\nconst Sidebar = styled(Box)(({ theme }) => ({\n    width: '20%',\n    maxWidth: '350px',\n    height: '100vh',\n    borderRight: '1px solid #ccc',\n    padding: '20px',\n    backgroundColor: '#c3d0d9',\n    flexShrink: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    boxShadow: '2px 0 5px rgba(0, 0, 0, 0.1)',\n}));\n\nconst MainContent = styled(Box)({\n    flexGrow: 1,\n    height: '100vh',\n    padding: '20px',\n    textAlign: 'center',\n    backgroundColor: '#ffffff',\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\n    overflowY: 'auto',\n    borderRadius: '10px',\n    margin: '20px',\n});\n\nconst Suggestions = styled(Box)(({ theme }) => ({\n    width: '20%',\n    maxWidth: '250px',\n    height: '100vh',\n    borderLeft: '1px solid #ccc',\n    padding: '20px',\n    backgroundColor: '#c3d0d9',\n    flexShrink: 0,\n    boxShadow: '-2px 0 5px rgba(0, 0, 0, 0.1)',\n}));\n\nconst ContentBox = styled(Box)({\n    backgroundColor: '#ffffff',\n    padding: '15px',\n    borderRadius: '10px',\n    boxShadow: '0px 2px 5px rgba(0, 0, 0, 0.1)',\n    marginBottom: '10px',\n});\n\nconst SidebarButton = styled(IconButton)({\n    marginBottom: '10px',\n});\n\nconst Dashboard = () => {\n    const [userData, setUserData] = useState(null);\n    const [role, setRole] = useState('');\n    const [friends, setFriends] = useState([]);\n    const [peopleYouMayKnow, setPeopleYouMayKnow] = useState([]);\n    const [selectedFriend, setSelectedFriend] = useState(null); // For conversation\n    const [conversation, setConversation] = useState([]);\n    const [newMessage, setNewMessage] = useState(''); // For sending new message\n    const [settingsVisible, setSettingsVisible] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchUserData = async () => {\n            const token = localStorage.getItem('token');\n            const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n            if (token && userId) {\n                try {\n                    const response = await axiosInstance.get(`/api/user/id/${userId}`, {\n                        headers: { Authorization: `Bearer ${token}` },\n                    });\n                    setUserData(response.data);\n                    setRole(response.data.roles?.[0] || 'Guest');\n                    await fetchFriends(userId, token);\n                    await fetchPeopleYouMayKnow(userId, token);\n                } catch (error) {\n                    console.error('Failed to fetch user data:', error.response ? error.response.data : error.message);\n                    navigate('/login');\n                } finally {\n                    setLoading(false);\n                }\n            } else {\n                navigate('/login');\n            }\n        };\n\n        fetchUserData();\n    }, [navigate]);\n\n    const fetchFriends = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/api/user/friends/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setFriends(response.data);\n        } catch (error) {\n            console.error('Failed to fetch friends:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const fetchPeopleYouMayKnow = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/user-service/api/friend-request/not-friends/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setPeopleYouMayKnow(response.data);\n        } catch (error) {\n            console.error('Failed to fetch people you may know:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    // Fetch conversation with selected friend\n    const fetchConversation = async (friendId) => {\n        const token = localStorage.getItem('token');\n        const userId = JSON.parse(localStorage.getItem('user'))?.id;\n        \n        if (token && userId) {\n            try {\n                const response = await axiosInstance.get(`/api/message/between/${userId}/${friendId}`, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                setConversation(response.data);\n            } catch (error) {\n                console.error('Failed to fetch conversation:', error.response ? error.response.data : error.message);\n            }\n        }\n    };\n\n    // Send new message\n    const sendMessage = async () => {\n        const token = localStorage.getItem('token');\n        const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n        if (newMessage && selectedFriend) {\n            try {\n                await axiosInstance.post(`/api/message/${userId}/${selectedFriend.id}`, {\n                    content: newMessage,\n                }, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                setNewMessage(''); // Clear input field after sending\n                await fetchConversation(selectedFriend.id); // Update conversation\n            } catch (error) {\n                console.error('Failed to send message:', error.response ? error.response.data : error.message);\n            }\n        }\n    };\n\n    const toggleSettings = () => {\n        setSettingsVisible((prev) => !prev);\n    };\n\n    const handleUpdateProfile = () => {\n        navigate('/update-profile');\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        navigate('/login');\n    };\n\n    const handleGoToInvitations = () => {\n        navigate('/invitations');\n    };\n\n    const handleSendFriendRequest = async (friendId) => {\n        const token = localStorage.getItem('token');\n        const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n        if (token && userId) {\n            try {\n                await axiosInstance.post(`/user-service/api/friend-request/${userId}/${friendId}`, {}, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                alert('Friend request sent successfully!');\n            } catch (error) {\n                console.error('Failed to send friend request:', error.response ? error.response.data : error.message);\n                alert('Failed to send friend request. Please try again later.');\n            }\n        }\n    };\n\n    const handleFriendClick = (friend) => {\n        setSelectedFriend(friend);\n        fetchConversation(friend.id); // Fetch conversation when a friend is clicked\n    };\n\n    if (loading) {\n        return <CircularProgress />;\n    }\n\n    return (\n        <StyledContainer>\n            <Sidebar>\n                <div>\n                    <SidebarButton onClick={() => navigate('/profile')}>\n                        <FaUserCircle size={50} />\n                    </SidebarButton>\n                    <Typography variant=\"h5\">{userData ? userData.username : 'Guest'}</Typography>\n                    <Divider sx={{ margin: '10px 0' }} />\n\n                    <ContentBox>\n                        <Typography variant=\"h6\" sx={{ color: '#27374D' }}>Friends List</Typography>\n                        <List>\n                            {friends.length > 0 ? (\n                                friends.map((friend) => (\n                                    <ListItem \n                                        key={friend.id} \n                                        button \n                                        onClick={() => handleFriendClick(friend)} \n                                        selected={selectedFriend && selectedFriend.id === friend.id}  // Highlight the selected friend\n                                    >\n                                        <ListItemText primary={`${friend.firstname} ${friend.lastname}`} />\n                                    </ListItem>\n                                ))\n                            ) : (\n                                <ListItem>\n                                    <ListItemText primary=\"No friends found.\" />\n                                </ListItem>\n                            )}\n                        </List>\n                    </ContentBox>\n                </div>\n                <div>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={toggleSettings}>\n                        <FaCog /> Settings\n                    </Button>\n                    {settingsVisible && (\n                        <div>\n                            <Button onClick={handleUpdateProfile}>Update Profile</Button>\n                            <Button onClick={handleGoToInvitations}>See Invitations</Button>\n                            <Button onClick={handleLogout} color=\"error\">\n                                Log out\n                            </Button>\n                        </div>\n                    )}\n                </div>\n            </Sidebar>\n\n            <MainContent>\n                {selectedFriend ? (\n                    <Box>\n                        <Typography variant=\"h5\">\n                            Conversation with {selectedFriend.firstname} {selectedFriend.lastname}\n                        </Typography>\n                        <List>\n                            {conversation.length > 0 ? (\n                                conversation.map((msg) => (\n                                    <ListItem key={msg.id}>\n                                        <ListItemText \n                                            primary={`${msg.senderId === currentUserId ? 'You' : selectedFriend.firstname}: ${msg.content}`} \n                                            secondary={new Date(msg.timestamp).toLocaleString()} \n                                        />\n                                    </ListItem>\n                                ))\n                            ) : (\n                                <Typography>No messages yet.</Typography>\n                            )}\n                        </List>\n                        <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\n                            <TextField\n                                value={newMessage}\n                                onChange={(e) => setNewMessage(e.target.value)}\n                                label=\"Type a message\"\n                                fullWidth\n                            />\n                            <Button onClick={sendMessage} sx={{ ml: 2 }} variant=\"contained\">\n                                Send\n                            </Button>\n                        </Box>\n                    </Box>\n                ) : (\n                    <Typography>Select a friend to start a conversation.</Typography>\n                )}\n            </MainContent>\n\n\n\n            <Suggestions>\n                <Typography variant=\"h6\" sx={{ color: '#27374D' }}>People You May Know</Typography>\n                <Divider sx={{ margin: '10px 0' }} />\n                <List>\n                    {peopleYouMayKnow.length > 0 ? (\n                        peopleYouMayKnow.map((person) => (\n                            <ListItem key={person.id}>\n                                <ListItemText primary={`${person.firstname} ${person.lastname}`} />\n                                <Button \n                                    onClick={() => handleSendFriendRequest(person.id)} \n                                    variant=\"outlined\" \n                                    color=\"primary\"\n                                >\n                                    Add Friend\n                                </Button>\n                            </ListItem>\n                        ))\n                    ) : (\n                        <ListItem>\n                            <ListItemText primary=\"No suggestions found.\" />\n                        </ListItem>\n                    )}\n                </List>\n            </Suggestions>\n        </StyledContainer>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,SAASC,YAAY,EAAEC,KAAK,QAAQ,gBAAgB;AACpD,SACIC,GAAG,EACHC,MAAM,EACNC,OAAO,EACPC,UAAU,EACVC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,gBAAgB,EAChBC,SAAS,QACN,eAAe;AACtB,SAASC,MAAM,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,eAAe,GAAGH,MAAM,CAACV,GAAG,CAAC,CAAC;EAChCc,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,KAAK;EACpBC,OAAO,EAAE,GAAG;EACZC,MAAM,EAAE,GAAG;EACXC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,OAAO;EACfC,QAAQ,EAAE,OAAO;EACjBC,GAAG,EAAE,CAAC;EACNC,IAAI,EAAE,CAAC;EACPC,QAAQ,EAAE,QAAQ;EAClBC,eAAe,EAAE;AACrB,CAAC,CAAC;AAACC,EAAA,GAZGZ,eAAe;AAcrB,MAAMa,OAAO,GAAGhB,MAAM,CAACV,GAAG,CAAC,CAAC,CAAC;EAAE2B;AAAM,CAAC,MAAM;EACxCT,KAAK,EAAE,KAAK;EACZU,QAAQ,EAAE,OAAO;EACjBT,MAAM,EAAE,OAAO;EACfU,WAAW,EAAE,gBAAgB;EAC7Bb,OAAO,EAAE,MAAM;EACfQ,eAAe,EAAE,SAAS;EAC1BM,UAAU,EAAE,CAAC;EACbhB,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EACvBgB,cAAc,EAAE,eAAe;EAC/BC,SAAS,EAAE;AACf,CAAC,CAAC,CAAC;AAACC,GAAA,GAZEP,OAAO;AAcb,MAAMQ,WAAW,GAAGxB,MAAM,CAACV,GAAG,CAAC,CAAC;EAC5BmC,QAAQ,EAAE,CAAC;EACXhB,MAAM,EAAE,OAAO;EACfH,OAAO,EAAE,MAAM;EACfoB,SAAS,EAAE,QAAQ;EACnBZ,eAAe,EAAE,SAAS;EAC1BQ,SAAS,EAAE,gCAAgC;EAC3CK,SAAS,EAAE,MAAM;EACjBC,YAAY,EAAE,MAAM;EACpBrB,MAAM,EAAE;AACZ,CAAC,CAAC;AAACsB,GAAA,GAVGL,WAAW;AAYjB,MAAMM,WAAW,GAAG9B,MAAM,CAACV,GAAG,CAAC,CAAC,CAAC;EAAE2B;AAAM,CAAC,MAAM;EAC5CT,KAAK,EAAE,KAAK;EACZU,QAAQ,EAAE,OAAO;EACjBT,MAAM,EAAE,OAAO;EACfsB,UAAU,EAAE,gBAAgB;EAC5BzB,OAAO,EAAE,MAAM;EACfQ,eAAe,EAAE,SAAS;EAC1BM,UAAU,EAAE,CAAC;EACbE,SAAS,EAAE;AACf,CAAC,CAAC,CAAC;AAACU,GAAA,GATEF,WAAW;AAWjB,MAAMG,UAAU,GAAGjC,MAAM,CAACV,GAAG,CAAC,CAAC;EAC3BwB,eAAe,EAAE,SAAS;EAC1BR,OAAO,EAAE,MAAM;EACfsB,YAAY,EAAE,MAAM;EACpBN,SAAS,EAAE,gCAAgC;EAC3CY,YAAY,EAAE;AAClB,CAAC,CAAC;AAACC,GAAA,GANGF,UAAU;AAQhB,MAAMG,aAAa,GAAGpC,MAAM,CAACN,UAAU,CAAC,CAAC;EACrCwC,YAAY,EAAE;AAClB,CAAC,CAAC;AAACG,GAAA,GAFGD,aAAa;AAInB,MAAME,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxD,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACyD,IAAI,EAAEC,OAAO,CAAC,GAAG1D,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC2D,OAAO,EAAEC,UAAU,CAAC,GAAG5D,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC6D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9D,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC+D,cAAc,EAAEC,iBAAiB,CAAC,GAAGhE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACiE,YAAY,EAAEC,eAAe,CAAC,GAAGlE,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmE,UAAU,EAAEC,aAAa,CAAC,GAAGpE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACqE,eAAe,EAAEC,kBAAkB,CAAC,GAAGtE,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACuE,OAAO,EAAEC,UAAU,CAAC,GAAGxE,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMyE,QAAQ,GAAGxE,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,MAAM2E,aAAa,GAAG,MAAAA,CAAA,KAAY;MAAA,IAAAC,WAAA;MAC9B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,MAAM,IAAAJ,WAAA,GAAGK,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,cAAAH,WAAA,uBAAxCA,WAAA,CAA0CO,EAAE;MAE3D,IAAIN,KAAK,IAAIG,MAAM,EAAE;QACjB,IAAI;UAAA,IAAAI,oBAAA;UACA,MAAMC,QAAQ,GAAG,MAAMlF,aAAa,CAACmF,GAAG,CAAC,gBAAgBN,MAAM,EAAE,EAAE;YAC/DO,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUX,KAAK;YAAG;UAChD,CAAC,CAAC;UACFpB,WAAW,CAAC4B,QAAQ,CAACI,IAAI,CAAC;UAC1B9B,OAAO,CAAC,EAAAyB,oBAAA,GAAAC,QAAQ,CAACI,IAAI,CAACC,KAAK,cAAAN,oBAAA,uBAAnBA,oBAAA,CAAsB,CAAC,CAAC,KAAI,OAAO,CAAC;UAC5C,MAAMO,YAAY,CAACX,MAAM,EAAEH,KAAK,CAAC;UACjC,MAAMe,qBAAqB,CAACZ,MAAM,EAAEH,KAAK,CAAC;QAC9C,CAAC,CAAC,OAAOgB,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACR,QAAQ,GAAGQ,KAAK,CAACR,QAAQ,CAACI,IAAI,GAAGI,KAAK,CAACE,OAAO,CAAC;UACjGrB,QAAQ,CAAC,QAAQ,CAAC;QACtB,CAAC,SAAS;UACND,UAAU,CAAC,KAAK,CAAC;QACrB;MACJ,CAAC,MAAM;QACHC,QAAQ,CAAC,QAAQ,CAAC;MACtB;IACJ,CAAC;IAEDC,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,MAAMiB,YAAY,GAAG,MAAAA,CAAOX,MAAM,EAAEH,KAAK,KAAK;IAC1C,IAAI;MACA,MAAMQ,QAAQ,GAAG,MAAMlF,aAAa,CAACmF,GAAG,CAAC,qBAAqBN,MAAM,EAAE,EAAE;QACpEO,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUX,KAAK;QAAG;MAChD,CAAC,CAAC;MACFhB,UAAU,CAACwB,QAAQ,CAACI,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACR,QAAQ,GAAGQ,KAAK,CAACR,QAAQ,CAACI,IAAI,GAAGI,KAAK,CAACE,OAAO,CAAC;IACnG;EACJ,CAAC;EAED,MAAMH,qBAAqB,GAAG,MAAAA,CAAOZ,MAAM,EAAEH,KAAK,KAAK;IACnD,IAAI;MACA,MAAMQ,QAAQ,GAAG,MAAMlF,aAAa,CAACmF,GAAG,CAAC,gDAAgDN,MAAM,EAAE,EAAE;QAC/FO,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUX,KAAK;QAAG;MAChD,CAAC,CAAC;MACFd,mBAAmB,CAACsB,QAAQ,CAACI,IAAI,CAAC;IACtC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACR,QAAQ,GAAGQ,KAAK,CAACR,QAAQ,CAACI,IAAI,GAAGI,KAAK,CAACE,OAAO,CAAC;IAC/G;EACJ,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAG,MAAOC,QAAQ,IAAK;IAAA,IAAAC,YAAA;IAC1C,MAAMrB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,MAAM,IAAAkB,YAAA,GAAGjB,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,cAAAmB,YAAA,uBAAxCA,YAAA,CAA0Cf,EAAE;IAE3D,IAAIN,KAAK,IAAIG,MAAM,EAAE;MACjB,IAAI;QACA,MAAMK,QAAQ,GAAG,MAAMlF,aAAa,CAACmF,GAAG,CAAC,wBAAwBN,MAAM,IAAIiB,QAAQ,EAAE,EAAE;UACnFV,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUX,KAAK;UAAG;QAChD,CAAC,CAAC;QACFV,eAAe,CAACkB,QAAQ,CAACI,IAAI,CAAC;MAClC,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACR,QAAQ,GAAGQ,KAAK,CAACR,QAAQ,CAACI,IAAI,GAAGI,KAAK,CAACE,OAAO,CAAC;MACxG;IACJ;EACJ,CAAC;;EAED;EACA,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,YAAA;IAC5B,MAAMvB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,MAAM,IAAAoB,YAAA,GAAGnB,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,cAAAqB,YAAA,uBAAxCA,YAAA,CAA0CjB,EAAE;IAE3D,IAAIf,UAAU,IAAIJ,cAAc,EAAE;MAC9B,IAAI;QACA,MAAM7D,aAAa,CAACkG,IAAI,CAAC,gBAAgBrB,MAAM,IAAIhB,cAAc,CAACmB,EAAE,EAAE,EAAE;UACpEmB,OAAO,EAAElC;QACb,CAAC,EAAE;UACCmB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUX,KAAK;UAAG;QAChD,CAAC,CAAC;QACFR,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;QACnB,MAAM2B,iBAAiB,CAAChC,cAAc,CAACmB,EAAE,CAAC,CAAC,CAAC;MAChD,CAAC,CAAC,OAAOU,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACR,QAAQ,GAAGQ,KAAK,CAACR,QAAQ,CAACI,IAAI,GAAGI,KAAK,CAACE,OAAO,CAAC;MAClG;IACJ;EACJ,CAAC;EAED,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IACzBhC,kBAAkB,CAAEiC,IAAI,IAAK,CAACA,IAAI,CAAC;EACvC,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAC9B/B,QAAQ,CAAC,iBAAiB,CAAC;EAC/B,CAAC;EAED,MAAMgC,YAAY,GAAGA,CAAA,KAAM;IACvB5B,YAAY,CAAC6B,UAAU,CAAC,OAAO,CAAC;IAChC7B,YAAY,CAAC6B,UAAU,CAAC,MAAM,CAAC;IAC/BjC,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAED,MAAMkC,qBAAqB,GAAGA,CAAA,KAAM;IAChClC,QAAQ,CAAC,cAAc,CAAC;EAC5B,CAAC;EAED,MAAMmC,uBAAuB,GAAG,MAAOZ,QAAQ,IAAK;IAAA,IAAAa,YAAA;IAChD,MAAMjC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,MAAM,IAAA8B,YAAA,GAAG7B,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,cAAA+B,YAAA,uBAAxCA,YAAA,CAA0C3B,EAAE;IAE3D,IAAIN,KAAK,IAAIG,MAAM,EAAE;MACjB,IAAI;QACA,MAAM7E,aAAa,CAACkG,IAAI,CAAC,oCAAoCrB,MAAM,IAAIiB,QAAQ,EAAE,EAAE,CAAC,CAAC,EAAE;UACnFV,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUX,KAAK;UAAG;QAChD,CAAC,CAAC;QACFkC,KAAK,CAAC,mCAAmC,CAAC;MAC9C,CAAC,CAAC,OAAOlB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACR,QAAQ,GAAGQ,KAAK,CAACR,QAAQ,CAACI,IAAI,GAAGI,KAAK,CAACE,OAAO,CAAC;QACrGgB,KAAK,CAAC,wDAAwD,CAAC;MACnE;IACJ;EACJ,CAAC;EAED,MAAMC,iBAAiB,GAAIC,MAAM,IAAK;IAClChD,iBAAiB,CAACgD,MAAM,CAAC;IACzBjB,iBAAiB,CAACiB,MAAM,CAAC9B,EAAE,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,IAAIX,OAAO,EAAE;IACT,oBAAOtD,OAAA,CAACJ,gBAAgB;MAAAoG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC/B;EAEA,oBACInG,OAAA,CAACC,eAAe;IAAAmG,QAAA,gBACZpG,OAAA,CAACc,OAAO;MAAAsF,QAAA,gBACJpG,OAAA;QAAAoG,QAAA,gBACIpG,OAAA,CAACkC,aAAa;UAACmE,OAAO,EAAEA,CAAA,KAAM7C,QAAQ,CAAC,UAAU,CAAE;UAAA4C,QAAA,eAC/CpG,OAAA,CAACd,YAAY;YAACoH,IAAI,EAAE;UAAG;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eAChBnG,OAAA,CAACT,UAAU;UAACgH,OAAO,EAAC,IAAI;UAAAH,QAAA,EAAE9D,QAAQ,GAAGA,QAAQ,CAACkE,QAAQ,GAAG;QAAO;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAC9EnG,OAAA,CAACV,OAAO;UAACmH,EAAE,EAAE;YAAEpG,MAAM,EAAE;UAAS;QAAE;UAAA2F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAErCnG,OAAA,CAAC+B,UAAU;UAAAqE,QAAA,gBACPpG,OAAA,CAACT,UAAU;YAACgH,OAAO,EAAC,IAAI;YAACE,EAAE,EAAE;cAAEC,KAAK,EAAE;YAAU,CAAE;YAAAN,QAAA,EAAC;UAAY;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC5EnG,OAAA,CAACP,IAAI;YAAA2G,QAAA,EACA1D,OAAO,CAACiE,MAAM,GAAG,CAAC,GACfjE,OAAO,CAACkE,GAAG,CAAEb,MAAM,iBACf/F,OAAA,CAACN,QAAQ;cAELmH,MAAM;cACNR,OAAO,EAAEA,CAAA,KAAMP,iBAAiB,CAACC,MAAM,CAAE;cACzCe,QAAQ,EAAEhE,cAAc,IAAIA,cAAc,CAACmB,EAAE,KAAK8B,MAAM,CAAC9B,EAAG,CAAE;cAAA;cAAAmC,QAAA,eAE9DpG,OAAA,CAACL,YAAY;gBAACoH,OAAO,EAAE,GAAGhB,MAAM,CAACiB,SAAS,IAAIjB,MAAM,CAACkB,QAAQ;cAAG;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC,GAL9DJ,MAAM,CAAC9B,EAAE;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMR,CACb,CAAC,gBAEFnG,OAAA,CAACN,QAAQ;cAAA0G,QAAA,eACLpG,OAAA,CAACL,YAAY;gBAACoH,OAAO,EAAC;cAAmB;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtC;UACb;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACNnG,OAAA;QAAAoG,QAAA,gBACIpG,OAAA,CAACX,MAAM;UAACkH,OAAO,EAAC,UAAU;UAACG,KAAK,EAAC,SAAS;UAACL,OAAO,EAAEhB,cAAe;UAAAe,QAAA,gBAC/DpG,OAAA,CAACb,KAAK;YAAA6G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,aACb;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACR/C,eAAe,iBACZpD,OAAA;UAAAoG,QAAA,gBACIpG,OAAA,CAACX,MAAM;YAACgH,OAAO,EAAEd,mBAAoB;YAAAa,QAAA,EAAC;UAAc;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC7DnG,OAAA,CAACX,MAAM;YAACgH,OAAO,EAAEX,qBAAsB;YAAAU,QAAA,EAAC;UAAe;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChEnG,OAAA,CAACX,MAAM;YAACgH,OAAO,EAAEb,YAAa;YAACkB,KAAK,EAAC,OAAO;YAAAN,QAAA,EAAC;UAE7C;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAEVnG,OAAA,CAACsB,WAAW;MAAA8E,QAAA,EACPtD,cAAc,gBACX9C,OAAA,CAACZ,GAAG;QAAAgH,QAAA,gBACApG,OAAA,CAACT,UAAU;UAACgH,OAAO,EAAC,IAAI;UAAAH,QAAA,GAAC,oBACH,EAACtD,cAAc,CAACkE,SAAS,EAAC,GAAC,EAAClE,cAAc,CAACmE,QAAQ;QAAA;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC,eACbnG,OAAA,CAACP,IAAI;UAAA2G,QAAA,EACApD,YAAY,CAAC2D,MAAM,GAAG,CAAC,GACpB3D,YAAY,CAAC4D,GAAG,CAAEM,GAAG,iBACjBlH,OAAA,CAACN,QAAQ;YAAA0G,QAAA,eACLpG,OAAA,CAACL,YAAY;cACToH,OAAO,EAAE,GAAGG,GAAG,CAACC,QAAQ,KAAKC,aAAa,GAAG,KAAK,GAAGtE,cAAc,CAACkE,SAAS,KAAKE,GAAG,CAAC9B,OAAO,EAAG;cAChGiC,SAAS,EAAE,IAAIC,IAAI,CAACJ,GAAG,CAACK,SAAS,CAAC,CAACC,cAAc,CAAC;YAAE;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvD;UAAC,GAJSe,GAAG,CAACjD,EAAE;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKX,CACb,CAAC,gBAEFnG,OAAA,CAACT,UAAU;YAAA6G,QAAA,EAAC;UAAgB;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QAC3C;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACPnG,OAAA,CAACZ,GAAG;UAACqH,EAAE,EAAE;YAAEvG,OAAO,EAAE,MAAM;YAAEuH,UAAU,EAAE,QAAQ;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAAtB,QAAA,gBACtDpG,OAAA,CAACH,SAAS;YACN8H,KAAK,EAAEzE,UAAW;YAClB0E,QAAQ,EAAGC,CAAC,IAAK1E,aAAa,CAAC0E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC/CI,KAAK,EAAC,gBAAgB;YACtBC,SAAS;UAAA;YAAAhC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eACFnG,OAAA,CAACX,MAAM;YAACgH,OAAO,EAAEpB,WAAY;YAACwB,EAAE,EAAE;cAAEwB,EAAE,EAAE;YAAE,CAAE;YAAC1B,OAAO,EAAC,WAAW;YAAAH,QAAA,EAAC;UAEjE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,gBAENnG,OAAA,CAACT,UAAU;QAAA6G,QAAA,EAAC;MAAwC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IACnE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,eAIdnG,OAAA,CAAC4B,WAAW;MAAAwE,QAAA,gBACRpG,OAAA,CAACT,UAAU;QAACgH,OAAO,EAAC,IAAI;QAACE,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAU,CAAE;QAAAN,QAAA,EAAC;MAAmB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACnFnG,OAAA,CAACV,OAAO;QAACmH,EAAE,EAAE;UAAEpG,MAAM,EAAE;QAAS;MAAE;QAAA2F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCnG,OAAA,CAACP,IAAI;QAAA2G,QAAA,EACAxD,gBAAgB,CAAC+D,MAAM,GAAG,CAAC,GACxB/D,gBAAgB,CAACgE,GAAG,CAAEsB,MAAM,iBACxBlI,OAAA,CAACN,QAAQ;UAAA0G,QAAA,gBACLpG,OAAA,CAACL,YAAY;YAACoH,OAAO,EAAE,GAAGmB,MAAM,CAAClB,SAAS,IAAIkB,MAAM,CAACjB,QAAQ;UAAG;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnEnG,OAAA,CAACX,MAAM;YACHgH,OAAO,EAAEA,CAAA,KAAMV,uBAAuB,CAACuC,MAAM,CAACjE,EAAE,CAAE;YAClDsC,OAAO,EAAC,UAAU;YAClBG,KAAK,EAAC,SAAS;YAAAN,QAAA,EAClB;UAED;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GARE+B,MAAM,CAACjE,EAAE;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASd,CACb,CAAC,gBAEFnG,OAAA,CAACN,QAAQ;UAAA0G,QAAA,eACLpG,OAAA,CAACL,YAAY;YAACoH,OAAO,EAAC;UAAuB;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C;MACb;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE1B,CAAC;AAAC9D,EAAA,CAhQID,SAAS;EAAA,QAUMpD,WAAW;AAAA;AAAAmJ,GAAA,GAV1B/F,SAAS;AAkQf,eAAeA,SAAS;AAAC,IAAAvB,EAAA,EAAAQ,GAAA,EAAAM,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAgG,GAAA;AAAAC,YAAA,CAAAvH,EAAA;AAAAuH,YAAA,CAAA/G,GAAA;AAAA+G,YAAA,CAAAzG,GAAA;AAAAyG,YAAA,CAAAtG,GAAA;AAAAsG,YAAA,CAAAnG,GAAA;AAAAmG,YAAA,CAAAjG,GAAA;AAAAiG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}