{"ast":null,"code":"var _jsxFileName = \"/home/rouaa/Desktop/social-media-front/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../axiosConfig';\nimport { FaUserCircle, FaCog } from 'react-icons/fa';\nimport { Box, Button, Divider, Typography, IconButton, List, ListItem, ListItemText, CircularProgress, TextField } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledContainer = styled(Box)({\n  display: 'flex',\n  flexDirection: 'row',\n  padding: '0',\n  margin: '0',\n  width: '100vw',\n  height: '100vh',\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  overflow: 'hidden',\n  backgroundColor: '#DDE6ED'\n});\n\n// Other styled components ...\n_c = StyledContainer;\nconst Dashboard = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [role, setRole] = useState('');\n  const [friends, setFriends] = useState([]);\n  const [peopleYouMayKnow, setPeopleYouMayKnow] = useState([]);\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // State for conversation and messages\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      var _JSON$parse;\n      const token = localStorage.getItem('token');\n      const userId = (_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.id;\n      if (token && userId) {\n        try {\n          var _response$data$roles;\n          const response = await axiosInstance.get(`/api/user/id/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setUserData(response.data);\n          setRole(((_response$data$roles = response.data.roles) === null || _response$data$roles === void 0 ? void 0 : _response$data$roles[0]) || 'Guest');\n          await fetchFriends(userId, token);\n          await fetchPeopleYouMayKnow(userId, token);\n        } catch (error) {\n          console.error('Failed to fetch user data:', error.response ? error.response.data : error.message);\n          navigate('/login');\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        navigate('/login');\n      }\n    };\n    fetchUserData();\n  }, [navigate]);\n  const fetchFriends = async (userId, token) => {\n    try {\n      const response = await axiosInstance.get(`/api/user/friends/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setFriends(response.data);\n    } catch (error) {\n      console.error('Failed to fetch friends:', error.response ? error.response.data : error.message);\n    }\n  };\n  const fetchPeopleYouMayKnow = async (userId, token) => {\n    try {\n      const response = await axiosInstance.get(`/user-service/api/friend-request/not-friends/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPeopleYouMayKnow(response.data);\n    } catch (error) {\n      console.error('Failed to fetch people you may know:', error.response ? error.response.data : error.message);\n    }\n  };\n  const fetchMessages = async friendId => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axiosInstance.get(`/api/messages/${friendId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessages(response.data);\n      setCurrentConversationId(friendId);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error.response ? error.response.data : error.message);\n    }\n  };\n  const handleSendMessage = async () => {\n    var _JSON$parse2;\n    const token = localStorage.getItem('token');\n    const userId = (_JSON$parse2 = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse2 === void 0 ? void 0 : _JSON$parse2.id;\n    if (newMessage && token && currentConversationId) {\n      try {\n        await axiosInstance.post(`/api/messages/${currentConversationId}`, {\n          senderId: userId,\n          content: newMessage\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMessages(prev => [...prev, {\n          senderId: userId,\n          content: newMessage\n        }]); // Update messages state\n        setNewMessage(''); // Clear input\n      } catch (error) {\n        console.error('Failed to send message:', error.response ? error.response.data : error.message);\n      }\n    }\n  };\n  const toggleSettings = () => {\n    setSettingsVisible(prev => !prev);\n  };\n  const handleUpdateProfile = () => {\n    navigate('/update-profile');\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n  const handleGoToInvitations = () => {\n    navigate('/invitations');\n  };\n  const handleSendFriendRequest = async friendId => {\n    var _JSON$parse3;\n    const token = localStorage.getItem('token');\n    const userId = (_JSON$parse3 = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse3 === void 0 ? void 0 : _JSON$parse3.id;\n    if (token && userId) {\n      try {\n        await axiosInstance.post(`/user-service/api/friend-request/${userId}/${friendId}`, {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('Friend request sent successfully!');\n      } catch (error) {\n        console.error('Failed to send friend request:', error.response ? error.response.data : error.message);\n        alert('Failed to send friend request. Please try again later.');\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SidebarButton, {\n          onClick: () => navigate('/profile'),\n          children: /*#__PURE__*/_jsxDEV(FaUserCircle, {\n            size: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: userData ? userData.username : 'Guest'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            margin: '10px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ContentBox, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: '#27374D'\n            },\n            children: \"Friends List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: friends.length > 0 ? friends.map(friend => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              onClick: () => fetchMessages(friend.id),\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${friend.firstname} ${friend.lastname}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 41\n              }, this)\n            }, friend.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"No friends found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SidebarButton, {\n          onClick: toggleSettings,\n          children: /*#__PURE__*/_jsxDEV(FaCog, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), settingsVisible && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleUpdateProfile,\n            variant: \"outlined\",\n            sx: {\n              marginBottom: '5px'\n            },\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleLogout,\n            variant: \"outlined\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          color: '#27374D'\n        },\n        children: \"Welcome to your Dashboard!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          margin: '20px 0'\n        },\n        children: \"This area can be used for various widgets or information.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), currentConversationId && /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: [\"Conversation with \", currentConversationId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              justifyContent: msg.senderId === JSON.parse(localStorage.getItem('user')).id ? 'flex-end' : 'flex-start'\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true,\n          placeholder: \"Type a message...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          sx: {\n            marginBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Suggestions, {\n      children: /*#__PURE__*/_jsxDEV(ContentBox, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: '#27374D'\n          },\n          children: \"People You May Know\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: peopleYouMayKnow.length > 0 ? peopleYouMayKnow.map(user => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              size: \"small\",\n              onClick: () => handleSendFriendRequest(user.id),\n              children: \"Add Friend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 37\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"No suggestions available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"n9c3COtQnK/UpYggeXx9e3CG9K0=\", false, function () {\n  return [useNavigate];\n});\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axiosInstance","FaUserCircle","FaCog","Box","Button","Divider","Typography","IconButton","List","ListItem","ListItemText","CircularProgress","TextField","styled","jsxDEV","_jsxDEV","StyledContainer","display","flexDirection","padding","margin","width","height","position","top","left","overflow","backgroundColor","_c","Dashboard","_s","userData","setUserData","role","setRole","friends","setFriends","peopleYouMayKnow","setPeopleYouMayKnow","settingsVisible","setSettingsVisible","loading","setLoading","currentConversationId","setCurrentConversationId","messages","setMessages","newMessage","setNewMessage","navigate","fetchUserData","_JSON$parse","token","localStorage","getItem","userId","JSON","parse","id","_response$data$roles","response","get","headers","Authorization","data","roles","fetchFriends","fetchPeopleYouMayKnow","error","console","message","fetchMessages","friendId","handleSendMessage","_JSON$parse2","post","senderId","content","prev","toggleSettings","handleUpdateProfile","handleLogout","removeItem","handleGoToInvitations","handleSendFriendRequest","_JSON$parse3","alert","fileName","_jsxFileName","lineNumber","columnNumber","children","Sidebar","SidebarButton","onClick","size","variant","username","sx","ContentBox","color","length","map","friend","button","primary","firstname","lastname","marginBottom","MainContent","msg","index","justifyContent","fullWidth","placeholder","value","onChange","e","target","Suggestions","user","_c2","$RefreshReg$"],"sources":["/home/rouaa/Desktop/social-media-front/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../axiosConfig';\nimport { FaUserCircle, FaCog } from 'react-icons/fa';\nimport {\n    Box,\n    Button,\n    Divider,\n    Typography,\n    IconButton,\n    List,\n    ListItem,\n    ListItemText,\n    CircularProgress,\n    TextField,\n} from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst StyledContainer = styled(Box)({\n    display: 'flex',\n    flexDirection: 'row',\n    padding: '0',\n    margin: '0',\n    width: '100vw',\n    height: '100vh',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    overflow: 'hidden',\n    backgroundColor: '#DDE6ED',\n});\n\n// Other styled components ...\n\nconst Dashboard = () => {\n    const [userData, setUserData] = useState(null);\n    const [role, setRole] = useState('');\n    const [friends, setFriends] = useState([]);\n    const [peopleYouMayKnow, setPeopleYouMayKnow] = useState([]);\n    const [settingsVisible, setSettingsVisible] = useState(false);\n    const [loading, setLoading] = useState(true);\n    \n    // State for conversation and messages\n    const [currentConversationId, setCurrentConversationId] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    \n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchUserData = async () => {\n            const token = localStorage.getItem('token');\n            const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n            if (token && userId) {\n                try {\n                    const response = await axiosInstance.get(`/api/user/id/${userId}`, {\n                        headers: { Authorization: `Bearer ${token}` },\n                    });\n                    setUserData(response.data);\n                    setRole(response.data.roles?.[0] || 'Guest');\n                    await fetchFriends(userId, token);\n                    await fetchPeopleYouMayKnow(userId, token);\n                } catch (error) {\n                    console.error('Failed to fetch user data:', error.response ? error.response.data : error.message);\n                    navigate('/login');\n                } finally {\n                    setLoading(false);\n                }\n            } else {\n                navigate('/login');\n            }\n        };\n\n        fetchUserData();\n    }, [navigate]);\n\n    const fetchFriends = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/api/user/friends/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setFriends(response.data);\n        } catch (error) {\n            console.error('Failed to fetch friends:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const fetchPeopleYouMayKnow = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/user-service/api/friend-request/not-friends/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setPeopleYouMayKnow(response.data);\n        } catch (error) {\n            console.error('Failed to fetch people you may know:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const fetchMessages = async (friendId) => {\n        const token = localStorage.getItem('token');\n        try {\n            const response = await axiosInstance.get(`/api/messages/${friendId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setMessages(response.data);\n            setCurrentConversationId(friendId);\n        } catch (error) {\n            console.error('Failed to fetch messages:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const handleSendMessage = async () => {\n        const token = localStorage.getItem('token');\n        const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n        if (newMessage && token && currentConversationId) {\n            try {\n                await axiosInstance.post(`/api/messages/${currentConversationId}`, {\n                    senderId: userId,\n                    content: newMessage,\n                }, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                setMessages((prev) => [...prev, { senderId: userId, content: newMessage }]); // Update messages state\n                setNewMessage(''); // Clear input\n            } catch (error) {\n                console.error('Failed to send message:', error.response ? error.response.data : error.message);\n            }\n        }\n    };\n\n    const toggleSettings = () => {\n        setSettingsVisible((prev) => !prev);\n    };\n\n    const handleUpdateProfile = () => {\n        navigate('/update-profile');\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        navigate('/login');\n    };\n\n    const handleGoToInvitations = () => {\n        navigate('/invitations');\n    };\n\n    const handleSendFriendRequest = async (friendId) => {\n        const token = localStorage.getItem('token');\n        const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n        if (token && userId) {\n            try {\n                await axiosInstance.post(`/user-service/api/friend-request/${userId}/${friendId}`, {}, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                alert('Friend request sent successfully!');\n            } catch (error) {\n                console.error('Failed to send friend request:', error.response ? error.response.data : error.message);\n                alert('Failed to send friend request. Please try again later.');\n            }\n        }\n    };\n\n    if (loading) {\n        return <CircularProgress />;\n    }\n\n    return (\n        <StyledContainer>\n            <Sidebar>\n                <div>\n                    <SidebarButton onClick={() => navigate('/profile')}>\n                        <FaUserCircle size={50} />\n                    </SidebarButton>\n                    <Typography variant=\"h5\">{userData ? userData.username : 'Guest'}</Typography>\n                    <Divider sx={{ margin: '10px 0' }} />\n\n                    <ContentBox>\n                        <Typography variant=\"h6\" sx={{ color: '#27374D' }}>Friends List</Typography>\n                        <List>\n                            {friends.length > 0 ? (\n                                friends.map((friend) => (\n                                    <ListItem key={friend.id} button onClick={() => fetchMessages(friend.id)}>\n                                        <ListItemText primary={`${friend.firstname} ${friend.lastname}`} />\n                                    </ListItem>\n                                ))\n                            ) : (\n                                <ListItem>\n                                    <ListItemText primary=\"No friends found.\" />\n                                </ListItem>\n                            )}\n                        </List>\n                    </ContentBox>\n                </div>\n\n                <div>\n                    <SidebarButton onClick={toggleSettings}>\n                        <FaCog size={20} />\n                    </SidebarButton>\n\n                    {settingsVisible && (\n                        <Box>\n                            <Button onClick={handleUpdateProfile} variant=\"outlined\" sx={{ marginBottom: '5px' }}>\n                                Update Profile\n                            </Button>\n                            <Button onClick={handleLogout} variant=\"outlined\">\n                                Logout\n                            </Button>\n                        </Box>\n                    )}\n                </div>\n            </Sidebar>\n\n            <MainContent>\n                <Typography variant=\"h4\" sx={{ color: '#27374D' }}>Welcome to your Dashboard!</Typography>\n                <Typography variant=\"body1\" sx={{ margin: '20px 0' }}>\n                    This area can be used for various widgets or information.\n                </Typography>\n\n                {/* Conversation Section */}\n                {currentConversationId && (\n                    <Box>\n                        <Typography variant=\"h5\">Conversation with {currentConversationId}</Typography>\n                        <List>\n                            {messages.map((msg, index) => (\n                                <ListItem key={index} sx={{ justifyContent: msg.senderId === JSON.parse(localStorage.getItem('user')).id ? 'flex-end' : 'flex-start' }}>\n                                    <ListItemText primary={msg.content} />\n                                </ListItem>\n                            ))}\n                        </List>\n                        <TextField\n                            variant=\"outlined\"\n                            fullWidth\n                            placeholder=\"Type a message...\"\n                            value={newMessage}\n                            onChange={(e) => setNewMessage(e.target.value)}\n                            sx={{ marginBottom: '10px' }}\n                        />\n                        <Button variant=\"contained\" onClick={handleSendMessage}>\n                            Send\n                        </Button>\n                    </Box>\n                )}\n            </MainContent>\n\n            <Suggestions>\n                <ContentBox>\n                    <Typography variant=\"h6\" sx={{ color: '#27374D' }}>People You May Know</Typography>\n                    <List>\n                        {peopleYouMayKnow.length > 0 ? (\n                            peopleYouMayKnow.map((user) => (\n                                <ListItem key={user.id}>\n                                    <ListItemText primary={user.username} />\n                                    <Button \n                                        variant=\"outlined\" \n                                        size=\"small\" \n                                        onClick={() => handleSendFriendRequest(user.id)}\n                                    >\n                                        Add Friend\n                                    </Button>\n                                </ListItem>\n                            ))\n                        ) : (\n                            <ListItem>\n                                <ListItemText primary=\"No suggestions available.\" />\n                            </ListItem>\n                        )}\n                    </List>\n                </ContentBox>\n            </Suggestions>\n        </StyledContainer>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}