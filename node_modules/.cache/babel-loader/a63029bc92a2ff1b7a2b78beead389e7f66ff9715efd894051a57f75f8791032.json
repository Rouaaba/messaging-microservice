{"ast":null,"code":"var _jsxFileName = \"/home/rouaa/Desktop/social-media-front/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from '../axiosInstance'; // Import axios instance\nimport { useNavigate } from 'react-router-dom';\nimport { CircularProgress, Typography, List, ListItem, ListItemText, Button, Divider, Box, TextField } from '@mui/material';\nimport { FaUserCircle, FaCog } from 'react-icons/fa';\nimport { StyledContainer, Sidebar, SidebarButton, ContentBox, MainContent, Suggestions } from './StyledComponents'; // Assuming you have styled components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [role, setRole] = useState('');\n  const [friends, setFriends] = useState([]);\n  const [peopleYouMayKnow, setPeopleYouMayKnow] = useState([]);\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [selectedFriend, setSelectedFriend] = useState(null); // To store the selected friend\n  const [messages, setMessages] = useState([]); // To store the messages\n  const [newMessage, setNewMessage] = useState(''); // To store the new message\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      var _JSON$parse;\n      const token = localStorage.getItem('token');\n      const userId = (_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.id;\n      if (token && userId) {\n        try {\n          var _response$data$roles;\n          const response = await axiosInstance.get(`/api/user/id/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setUserData(response.data);\n          setRole(((_response$data$roles = response.data.roles) === null || _response$data$roles === void 0 ? void 0 : _response$data$roles[0]) || 'Guest');\n          await fetchFriends(userId, token);\n          await fetchPeopleYouMayKnow(userId, token);\n        } catch (error) {\n          console.error('Failed to fetch user data:', error.response ? error.response.data : error.message);\n          navigate('/login');\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        navigate('/login');\n      }\n    };\n    fetchUserData();\n  }, [navigate]);\n  const fetchFriends = async (userId, token) => {\n    try {\n      const response = await axiosInstance.get(`/api/user/friends/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setFriends(response.data);\n    } catch (error) {\n      console.error('Failed to fetch friends:', error.response ? error.response.data : error.message);\n    }\n  };\n  const fetchPeopleYouMayKnow = async (userId, token) => {\n    try {\n      const response = await axiosInstance.get(`/user-service/api/friend-request/not-friends/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPeopleYouMayKnow(response.data);\n    } catch (error) {\n      console.error('Failed to fetch people you may know:', error.response ? error.response.data : error.message);\n    }\n  };\n  const fetchMessages = async friendId => {\n    var _JSON$parse2;\n    const token = localStorage.getItem('token');\n    const userId = (_JSON$parse2 = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse2 === void 0 ? void 0 : _JSON$parse2.id;\n    try {\n      const response = await axiosInstance.get(`/api/message/between/${userId}/${friendId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessages(response.data);\n      setSelectedFriend(friendId); // Set the selected friend\n    } catch (error) {\n      console.error('Failed to fetch messages:', error.response ? error.response.data : error.message);\n    }\n  };\n  const sendMessage = async () => {\n    var _JSON$parse3;\n    const token = localStorage.getItem('token');\n    const userId = (_JSON$parse3 = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse3 === void 0 ? void 0 : _JSON$parse3.id;\n    if (newMessage && selectedFriend) {\n      try {\n        const messageData = {\n          senderId: userId,\n          recipientId: selectedFriend,\n          content: newMessage\n        };\n        const response = await axiosInstance.post('/api/message', messageData, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMessages(prevMessages => [...prevMessages, response.data]); // Add the new message to the list\n        setNewMessage(''); // Clear the input field\n      } catch (error) {\n        console.error('Failed to send message:', error.response ? error.response.data : error.message);\n      }\n    }\n  };\n  const toggleSettings = () => {\n    setSettingsVisible(prev => !prev);\n  };\n  const handleUpdateProfile = () => {\n    navigate('/update-profile');\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n  const handleGoToInvitations = () => {\n    navigate('/invitations');\n  };\n  const handleSendFriendRequest = async friendId => {\n    var _JSON$parse4;\n    const token = localStorage.getItem('token');\n    const userId = (_JSON$parse4 = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse4 === void 0 ? void 0 : _JSON$parse4.id;\n    if (token && userId) {\n      try {\n        await axiosInstance.post(`/user-service/api/friend-request/${userId}/${friendId}`, {}, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('Friend request sent successfully!');\n      } catch (error) {\n        console.error('Failed to send friend request:', error.response ? error.response.data : error.message);\n        alert('Failed to send friend request. Please try again later.');\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SidebarButton, {\n          onClick: () => navigate('/profile'),\n          children: /*#__PURE__*/_jsxDEV(FaUserCircle, {\n            size: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: userData ? userData.username : 'Guest'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            margin: '10px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ContentBox, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: '#27374D'\n            },\n            children: \"Friends List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: friends.length > 0 ? friends.map(friend => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              onClick: () => fetchMessages(friend.id),\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${friend.firstname} ${friend.lastname}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 41\n              }, this)\n            }, friend.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"No friends found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SidebarButton, {\n          onClick: toggleSettings,\n          children: /*#__PURE__*/_jsxDEV(FaCog, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), settingsVisible && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleUpdateProfile,\n            variant: \"outlined\",\n            sx: {\n              marginBottom: '5px'\n            },\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleLogout,\n            variant: \"outlined\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          color: '#27374D'\n        },\n        children: \"Welcome to your Dashboard!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), selectedFriend && /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            marginTop: '20px'\n          },\n          children: [\"Conversation with Friend \", selectedFriend]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type a message\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: sendMessage,\n            variant: \"contained\",\n            sx: {\n              marginLeft: '10px'\n            },\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          margin: '20px 0'\n        },\n        children: \"This area can be used for various widgets or information.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Suggestions, {\n      children: [/*#__PURE__*/_jsxDEV(ContentBox, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: '#27374D'\n          },\n          children: \"People You May Know\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: peopleYouMayKnow.length > 0 ? peopleYouMayKnow.map(user => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              size: \"small\",\n              onClick: () => handleSendFriendRequest(user.id),\n              sx: {\n                marginLeft: '10px'\n              },\n              children: \"Send Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 37\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"No suggestions.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleGoToInvitations,\n        variant: \"outlined\",\n        fullWidth: true,\n        sx: {\n          backgroundColor: '#ffffff',\n          marginTop: '10px'\n        },\n        children: \"Go to Invitations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"9REjljy0swPsU5+3HMFh5+9sx60=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","useNavigate","CircularProgress","Typography","List","ListItem","ListItemText","Button","Divider","Box","TextField","FaUserCircle","FaCog","StyledContainer","Sidebar","SidebarButton","ContentBox","MainContent","Suggestions","jsxDEV","_jsxDEV","Dashboard","_s","userData","setUserData","role","setRole","friends","setFriends","peopleYouMayKnow","setPeopleYouMayKnow","settingsVisible","setSettingsVisible","loading","setLoading","selectedFriend","setSelectedFriend","messages","setMessages","newMessage","setNewMessage","navigate","fetchUserData","_JSON$parse","token","localStorage","getItem","userId","JSON","parse","id","_response$data$roles","response","get","headers","Authorization","data","roles","fetchFriends","fetchPeopleYouMayKnow","error","console","message","fetchMessages","friendId","_JSON$parse2","sendMessage","_JSON$parse3","messageData","senderId","recipientId","content","post","prevMessages","toggleSettings","prev","handleUpdateProfile","handleLogout","removeItem","handleGoToInvitations","handleSendFriendRequest","_JSON$parse4","alert","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","size","variant","username","sx","margin","color","length","map","friend","button","primary","firstname","lastname","marginBottom","marginTop","msg","index","display","value","onChange","e","target","placeholder","fullWidth","marginLeft","user","backgroundColor","_c","$RefreshReg$"],"sources":["/home/rouaa/Desktop/social-media-front/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axiosInstance from '../axiosInstance'; // Import axios instance\nimport { useNavigate } from 'react-router-dom';\nimport {\n    CircularProgress, Typography, List, ListItem, ListItemText,\n    Button, Divider, Box, TextField\n} from '@mui/material';\nimport { FaUserCircle, FaCog } from 'react-icons/fa';\nimport { StyledContainer, Sidebar, SidebarButton, ContentBox, MainContent, Suggestions } from './StyledComponents'; // Assuming you have styled components\n\nconst Dashboard = () => {\n    const [userData, setUserData] = useState(null);\n    const [role, setRole] = useState('');\n    const [friends, setFriends] = useState([]);\n    const [peopleYouMayKnow, setPeopleYouMayKnow] = useState([]);\n    const [settingsVisible, setSettingsVisible] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [selectedFriend, setSelectedFriend] = useState(null); // To store the selected friend\n    const [messages, setMessages] = useState([]); // To store the messages\n    const [newMessage, setNewMessage] = useState(''); // To store the new message\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchUserData = async () => {\n            const token = localStorage.getItem('token');\n            const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n            if (token && userId) {\n                try {\n                    const response = await axiosInstance.get(`/api/user/id/${userId}`, {\n                        headers: { Authorization: `Bearer ${token}` },\n                    });\n                    setUserData(response.data);\n                    setRole(response.data.roles?.[0] || 'Guest');\n                    await fetchFriends(userId, token);\n                    await fetchPeopleYouMayKnow(userId, token);\n                } catch (error) {\n                    console.error('Failed to fetch user data:', error.response ? error.response.data : error.message);\n                    navigate('/login');\n                } finally {\n                    setLoading(false);\n                }\n            } else {\n                navigate('/login');\n            }\n        };\n\n        fetchUserData();\n    }, [navigate]);\n\n    const fetchFriends = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/api/user/friends/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setFriends(response.data);\n        } catch (error) {\n            console.error('Failed to fetch friends:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const fetchPeopleYouMayKnow = async (userId, token) => {\n        try {\n            const response = await axiosInstance.get(`/user-service/api/friend-request/not-friends/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setPeopleYouMayKnow(response.data);\n        } catch (error) {\n            console.error('Failed to fetch people you may know:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const fetchMessages = async (friendId) => {\n        const token = localStorage.getItem('token');\n        const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n        try {\n            const response = await axiosInstance.get(`/api/message/between/${userId}/${friendId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setMessages(response.data);\n            setSelectedFriend(friendId); // Set the selected friend\n        } catch (error) {\n            console.error('Failed to fetch messages:', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const sendMessage = async () => {\n        const token = localStorage.getItem('token');\n        const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n        if (newMessage && selectedFriend) {\n            try {\n                const messageData = {\n                    senderId: userId,\n                    recipientId: selectedFriend,\n                    content: newMessage,\n                };\n\n                const response = await axiosInstance.post('/api/message', messageData, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n\n                setMessages((prevMessages) => [...prevMessages, response.data]); // Add the new message to the list\n                setNewMessage(''); // Clear the input field\n            } catch (error) {\n                console.error('Failed to send message:', error.response ? error.response.data : error.message);\n            }\n        }\n    };\n\n    const toggleSettings = () => {\n        setSettingsVisible((prev) => !prev);\n    };\n\n    const handleUpdateProfile = () => {\n        navigate('/update-profile');\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        navigate('/login');\n    };\n\n    const handleGoToInvitations = () => {\n        navigate('/invitations');\n    };\n\n    const handleSendFriendRequest = async (friendId) => {\n        const token = localStorage.getItem('token');\n        const userId = JSON.parse(localStorage.getItem('user'))?.id;\n\n        if (token && userId) {\n            try {\n                await axiosInstance.post(`/user-service/api/friend-request/${userId}/${friendId}`, {}, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                alert('Friend request sent successfully!');\n            } catch (error) {\n                console.error('Failed to send friend request:', error.response ? error.response.data : error.message);\n                alert('Failed to send friend request. Please try again later.');\n            }\n        }\n    };\n\n    if (loading) {\n        return <CircularProgress />;\n    }\n\n    return (\n        <StyledContainer>\n            <Sidebar>\n                <div>\n                    <SidebarButton onClick={() => navigate('/profile')}>\n                        <FaUserCircle size={50} />\n                    </SidebarButton>\n                    <Typography variant=\"h5\">{userData ? userData.username : 'Guest'}</Typography>\n                    <Divider sx={{ margin: '10px 0' }} />\n\n                    <ContentBox>\n                        <Typography variant=\"h6\" sx={{ color: '#27374D' }}>Friends List</Typography>\n                        <List>\n                            {friends.length > 0 ? (\n                                friends.map((friend) => (\n                                    <ListItem key={friend.id} button onClick={() => fetchMessages(friend.id)}>\n                                        <ListItemText primary={`${friend.firstname} ${friend.lastname}`} />\n                                    </ListItem>\n                                ))\n                            ) : (\n                                <ListItem>\n                                    <ListItemText primary=\"No friends found.\" />\n                                </ListItem>\n                            )}\n                        </List>\n                    </ContentBox>\n                </div>\n\n                <div>\n                    <SidebarButton onClick={toggleSettings}>\n                        <FaCog size={20} />\n                    </SidebarButton>\n\n                    {settingsVisible && (\n                        <Box>\n                            <Button onClick={handleUpdateProfile} variant=\"outlined\" sx={{ marginBottom: '5px' }}>\n                                Update Profile\n                            </Button>\n                            <Button onClick={handleLogout} variant=\"outlined\">\n                                Logout\n                            </Button>\n                        </Box>\n                    )}\n                </div>\n            </Sidebar>\n\n            <MainContent>\n                <Typography variant=\"h4\" sx={{ color: '#27374D' }}>Welcome to your Dashboard!</Typography>\n\n                {selectedFriend && (\n                    <Box>\n                        <Typography variant=\"h6\" sx={{ marginTop: '20px' }}>\n                            Conversation with Friend {selectedFriend}\n                        </Typography>\n                        <List>\n                            {messages.map((msg, index) => (\n                                <ListItem key={index}>\n                                    <ListItemText primary={msg.content} />\n                                </ListItem>\n                            ))}\n                        </List>\n\n                        <Box sx={{ display: 'flex', marginTop: '10px' }}>\n                            <TextField\n                                value={newMessage}\n                                onChange={(e) => setNewMessage(e.target.value)}\n                                placeholder=\"Type a message\"\n                                fullWidth\n                            />\n                            <Button onClick={sendMessage} variant=\"contained\" sx={{ marginLeft: '10px' }}>\n                                Send\n                            </Button>\n                        </Box>\n                    </Box>\n                )}\n\n                <Typography variant=\"body1\" sx={{ margin: '20px 0' }}>\n                    This area can be used for various widgets or information.\n                </Typography>\n            </MainContent>\n\n            <Suggestions>\n                <ContentBox>\n                    <Typography variant=\"h6\" sx={{ color: '#27374D' }}>People You May Know</Typography>\n                    <List>\n                        {peopleYouMayKnow.length > 0 ? (\n                            peopleYouMayKnow.map((user) => (\n                                <ListItem key={user.id}>\n                                    <ListItemText primary={user.username} />\n                                    <Button \n                                        variant=\"outlined\" \n                                        size=\"small\" \n                                        onClick={() => handleSendFriendRequest(user.id)} \n                                        sx={{ marginLeft: '10px' }}\n                                    >\n                                        Send Request\n                                    </Button>\n                                </ListItem>\n                            ))\n                        ) : (\n                            <ListItem>\n                                <ListItemText primary=\"No suggestions.\" />\n                            </ListItem>\n                        )}\n                    </List>\n                </ContentBox>\n                <Button\n                    onClick={handleGoToInvitations}\n                    variant=\"outlined\"\n                    fullWidth\n                    sx={{\n                        backgroundColor: '#ffffff',\n                        marginTop: '10px',\n                    }}\n                >\n                    Go to Invitations\n                </Button>\n            </Suggestions>\n        </StyledContainer>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}