{"ast":null,"code":"import axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'http://172.25.0.4:8080/api' // Update to your API base URL\n});\n\n// Request interceptor to add the token to the headers\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // Retrieve the token from local storage\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`; // Automatically attach the token\n  }\n  return config; // Return the updated config\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization"],"sources":["/home/rouaa/Desktop/social-media-front/src/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: 'http://172.25.0.4:8080/api', // Update to your API base URL\n});\n\n// Request interceptor to add the token to the headers\naxiosInstance.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token'); // Retrieve the token from local storage\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`; // Automatically attach the token\n  }\n  return config; // Return the updated config\n});\n\nexport default axiosInstance;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE,4BAA4B,CAAE;AACzC,CAAC,CAAC;;AAEF;AACAF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACjD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE,CAAC,CAAC;EACpD;EACA,OAAOD,MAAM,CAAC,CAAC;AACjB,CAAC,CAAC;AAEF,eAAeN,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}